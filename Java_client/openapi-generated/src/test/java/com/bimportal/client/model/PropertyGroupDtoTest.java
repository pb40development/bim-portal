/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import com.bimportal.client.model.BimPortalMetadata;
import com.bimportal.client.model.BookmarkStatus;
import com.bimportal.client.model.CountryLanguageCode;
import com.bimportal.client.model.DefinitionsInLanguageDto;
import com.bimportal.client.model.NamesInLanguageDto;
import com.bimportal.client.model.ObservationStatus;
import com.bimportal.client.model.PropertyDto;
import com.bimportal.client.model.PropertyGroupTagDto;
import com.bimportal.client.model.PropertyOrGroupCatalogInformation;
import com.bimportal.client.model.PropertyOrGroupWithNamesInLanguage;
import com.bimportal.client.model.RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries;
import com.bimportal.client.model.SimpleInheritedPropertyDto;
import com.bimportal.client.model.SimpleParentGroup;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PropertyGroupDto
 */
class PropertyGroupDtoTest {
    private final PropertyGroupDto model = new PropertyGroupDto();

    /**
     * Model tests for PropertyGroupDto
     */
    @Test
    void testPropertyGroupDto() {
        // TODO: test PropertyGroupDto
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'guid'
     */
    @Test
    void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'informationElementStatus'
     */
    @Test
    void informationElementStatusTest() {
        // TODO: test informationElementStatus
    }

    /**
     * Test the property 'dateOfCreation'
     */
    @Test
    void dateOfCreationTest() {
        // TODO: test dateOfCreation
    }

    /**
     * Test the property 'dateOfActivation'
     */
    @Test
    void dateOfActivationTest() {
        // TODO: test dateOfActivation
    }

    /**
     * Test the property 'dateOfLastChange'
     */
    @Test
    void dateOfLastChangeTest() {
        // TODO: test dateOfLastChange
    }

    /**
     * Test the property 'dateOfRevision'
     */
    @Test
    void dateOfRevisionTest() {
        // TODO: test dateOfRevision
    }

    /**
     * Test the property 'dateOfVersion'
     */
    @Test
    void dateOfVersionTest() {
        // TODO: test dateOfVersion
    }

    /**
     * Test the property 'dateOfDeactivation'
     */
    @Test
    void dateOfDeactivationTest() {
        // TODO: test dateOfDeactivation
    }

    /**
     * Test the property 'versionNumber'
     */
    @Test
    void versionNumberTest() {
        // TODO: test versionNumber
    }

    /**
     * Test the property 'revisionNumber'
     */
    @Test
    void revisionNumberTest() {
        // TODO: test revisionNumber
    }

    /**
     * Test the property 'replaces'
     */
    @Test
    void replacesTest() {
        // TODO: test replaces
    }

    /**
     * Test the property 'replacedBy'
     */
    @Test
    void replacedByTest() {
        // TODO: test replacedBy
    }

    /**
     * Test the property 'deprecationExplanation'
     */
    @Test
    void deprecationExplanationTest() {
        // TODO: test deprecationExplanation
    }

    /**
     * Test the property 'relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries'
     */
    @Test
    void relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionariesTest() {
        // TODO: test relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries
    }

    /**
     * Test the property 'creatorsLanguage'
     */
    @Test
    void creatorsLanguageTest() {
        // TODO: test creatorsLanguage
    }

    /**
     * Test the property 'namesInLanguage'
     */
    @Test
    void namesInLanguageTest() {
        // TODO: test namesInLanguage
    }

    /**
     * Test the property 'definitionsInLanguage'
     */
    @Test
    void definitionsInLanguageTest() {
        // TODO: test definitionsInLanguage
    }

    /**
     * Test the property 'visualRepresentation'
     */
    @Test
    void visualRepresentationTest() {
        // TODO: test visualRepresentation
    }

    /**
     * Test the property 'countryOfUse'
     */
    @Test
    void countryOfUseTest() {
        // TODO: test countryOfUse
    }

    /**
     * Test the property 'subdivisionOfUse'
     */
    @Test
    void subdivisionOfUseTest() {
        // TODO: test subdivisionOfUse
    }

    /**
     * Test the property 'countryOfOrigin'
     */
    @Test
    void countryOfOriginTest() {
        // TODO: test countryOfOrigin
    }

    /**
     * Test the property 'categoryOfGroupOfProperties'
     */
    @Test
    void categoryOfGroupOfPropertiesTest() {
        // TODO: test categoryOfGroupOfProperties
    }

    /**
     * Test the property 'properties'
     */
    @Test
    void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'childrenPropertyGroups'
     */
    @Test
    void childrenPropertyGroupsTest() {
        // TODO: test childrenPropertyGroups
    }

    /**
     * Test the property 'parentGroup'
     */
    @Test
    void parentGroupTest() {
        // TODO: test parentGroup
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'bookmarked'
     */
    @Test
    void bookmarkedTest() {
        // TODO: test bookmarked
    }

    /**
     * Test the property 'observed'
     */
    @Test
    void observedTest() {
        // TODO: test observed
    }

    /**
     * Test the property 'simpleInheritedProperties'
     */
    @Test
    void simpleInheritedPropertiesTest() {
        // TODO: test simpleInheritedProperties
    }

    /**
     * Test the property 'organisationId'
     */
    @Test
    void organisationIdTest() {
        // TODO: test organisationId
    }

    /**
     * Test the property 'organisationName'
     */
    @Test
    void organisationNameTest() {
        // TODO: test organisationName
    }

    /**
     * Test the property 'tags'
     */
    @Test
    void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'organisationType'
     */
    @Test
    void organisationTypeTest() {
        // TODO: test organisationType
    }

    /**
     * Test the property 'canCreateNewVersion'
     */
    @Test
    void canCreateNewVersionTest() {
        // TODO: test canCreateNewVersion
    }

    /**
     * Test the property 'catalogInformation'
     */
    @Test
    void catalogInformationTest() {
        // TODO: test catalogInformation
    }

}
