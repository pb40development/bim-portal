/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import java.util.UUID;
import org.hibernate.validator.constraints.*;

/** AiaContextInfoPublicRequest */
@JsonPropertyOrder({
  AiaContextInfoPublicRequest.JSON_PROPERTY_FILTER_GUIDS,
  AiaContextInfoPublicRequest.JSON_PROPERTY_CONTEXT_TYPE,
  AiaContextInfoPublicRequest.JSON_PROPERTY_ORGANISATION_GUIDS,
  AiaContextInfoPublicRequest.JSON_PROPERTY_SEARCH_STRING,
  AiaContextInfoPublicRequest.JSON_PROPERTY_CONTEXT_IDS,
  AiaContextInfoPublicRequest.JSON_PROPERTY_INCLUDE_DEPRECATED,
  AiaContextInfoPublicRequest.JSON_PROPERTY_PAGE_NUMBER
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class AiaContextInfoPublicRequest {
  public static final String JSON_PROPERTY_FILTER_GUIDS = "filterGuids";
  private List<UUID> filterGuids = new ArrayList<>();

  public static final String JSON_PROPERTY_CONTEXT_TYPE = "contextType";
  private String contextType;

  public static final String JSON_PROPERTY_ORGANISATION_GUIDS = "organisationGuids";
  private Set<UUID> organisationGuids = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SEARCH_STRING = "searchString";
  private String searchString;

  public static final String JSON_PROPERTY_CONTEXT_IDS = "contextIds";
  private List<UUID> contextIds = new ArrayList<>();

  public static final String JSON_PROPERTY_INCLUDE_DEPRECATED = "includeDeprecated";
  private Boolean includeDeprecated;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  private Integer pageNumber;

  public AiaContextInfoPublicRequest() {}

  public AiaContextInfoPublicRequest filterGuids(List<UUID> filterGuids) {

    this.filterGuids = filterGuids;
    return this;
  }

  public AiaContextInfoPublicRequest addFilterGuidsItem(UUID filterGuidsItem) {
    if (this.filterGuids == null) {
      this.filterGuids = new ArrayList<>();
    }
    this.filterGuids.add(filterGuidsItem);
    return this;
  }

  /**
   * GUIDs der Filter, die die zu liefernden Kontextinformationen besitzen müssen
   *
   * @return filterGuids
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_FILTER_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getFilterGuids() {
    return filterGuids;
  }

  @JsonProperty(JSON_PROPERTY_FILTER_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterGuids(List<UUID> filterGuids) {
    this.filterGuids = filterGuids;
  }

  public AiaContextInfoPublicRequest contextType(String contextType) {

    this.contextType = contextType;
    return this;
  }

  /**
   * Spezifischer Kontextinformationstyp
   *
   * @return contextType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTEXT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContextType() {
    return contextType;
  }

  @JsonProperty(JSON_PROPERTY_CONTEXT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextType(String contextType) {
    this.contextType = contextType;
  }

  public AiaContextInfoPublicRequest organisationGuids(Set<UUID> organisationGuids) {

    this.organisationGuids = organisationGuids;
    return this;
  }

  public AiaContextInfoPublicRequest addOrganisationGuidsItem(UUID organisationGuidsItem) {
    if (this.organisationGuids == null) {
      this.organisationGuids = new LinkedHashSet<>();
    }
    this.organisationGuids.add(organisationGuidsItem);
    return this;
  }

  /**
   * GUIDs der Organisationen, denen die Kontextinformationen angehören müssen
   *
   * @return organisationGuids
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<UUID> getOrganisationGuids() {
    return organisationGuids;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationGuids(Set<UUID> organisationGuids) {
    this.organisationGuids = organisationGuids;
  }

  public AiaContextInfoPublicRequest searchString(String searchString) {

    this.searchString = searchString;
    return this;
  }

  /**
   * Teilstring, den die Namen der zu liefernden Kontextinformationen beinhalten müssen
   *
   * @return searchString
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchString() {
    return searchString;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public AiaContextInfoPublicRequest contextIds(List<UUID> contextIds) {

    this.contextIds = contextIds;
    return this;
  }

  public AiaContextInfoPublicRequest addContextIdsItem(UUID contextIdsItem) {
    if (this.contextIds == null) {
      this.contextIds = new ArrayList<>();
    }
    this.contextIds.add(contextIdsItem);
    return this;
  }

  /**
   * GUIDs der Kontextinformationen, die die zu liefernden Kontextinformationen referenzieren müssen
   *
   * @return contextIds
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CONTEXT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getContextIds() {
    return contextIds;
  }

  @JsonProperty(JSON_PROPERTY_CONTEXT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextIds(List<UUID> contextIds) {
    this.contextIds = contextIds;
  }

  public AiaContextInfoPublicRequest includeDeprecated(Boolean includeDeprecated) {

    this.includeDeprecated = includeDeprecated;
    return this;
  }

  /**
   * true, wenn auch veraltete Kontextinformationen mitgeliefert werden sollen
   *
   * @return includeDeprecated
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIncludeDeprecated() {
    return includeDeprecated;
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeDeprecated(Boolean includeDeprecated) {
    this.includeDeprecated = includeDeprecated;
  }

  public AiaContextInfoPublicRequest pageNumber(Integer pageNumber) {

    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Laufende Nummer der Ergebnisseite
   *
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageNumber() {
    return pageNumber;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AiaContextInfoPublicRequest aiaContextInfoPublicRequest = (AiaContextInfoPublicRequest) o;
    return Objects.equals(this.filterGuids, aiaContextInfoPublicRequest.filterGuids)
        && Objects.equals(this.contextType, aiaContextInfoPublicRequest.contextType)
        && Objects.equals(this.organisationGuids, aiaContextInfoPublicRequest.organisationGuids)
        && Objects.equals(this.searchString, aiaContextInfoPublicRequest.searchString)
        && Objects.equals(this.contextIds, aiaContextInfoPublicRequest.contextIds)
        && Objects.equals(this.includeDeprecated, aiaContextInfoPublicRequest.includeDeprecated)
        && Objects.equals(this.pageNumber, aiaContextInfoPublicRequest.pageNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        filterGuids,
        contextType,
        organisationGuids,
        searchString,
        contextIds,
        includeDeprecated,
        pageNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AiaContextInfoPublicRequest {\n");
    sb.append("    filterGuids: ").append(toIndentedString(filterGuids)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    organisationGuids: ").append(toIndentedString(organisationGuids)).append("\n");
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    contextIds: ").append(toIndentedString(contextIds)).append("\n");
    sb.append("    includeDeprecated: ").append(toIndentedString(includeDeprecated)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
