/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;
import org.hibernate.validator.constraints.*;

/** PropertyDto */
@JsonPropertyOrder({
  PropertyDto.JSON_PROPERTY_ID,
  PropertyDto.JSON_PROPERTY_GUID,
  PropertyDto.JSON_PROPERTY_STATUS,
  PropertyDto.JSON_PROPERTY_DATE_OF_CREATION,
  PropertyDto.JSON_PROPERTY_DATE_OF_ACTIVATION,
  PropertyDto.JSON_PROPERTY_DATE_OF_LAST_CHANGE,
  PropertyDto.JSON_PROPERTY_DATE_OF_REVISION,
  PropertyDto.JSON_PROPERTY_DATE_OF_VERSION,
  PropertyDto.JSON_PROPERTY_DATE_OF_DEACTIVATION,
  PropertyDto.JSON_PROPERTY_VERSION_NUMBER,
  PropertyDto.JSON_PROPERTY_REVISION_NUMBER,
  PropertyDto.JSON_PROPERTY_REPLACES,
  PropertyDto.JSON_PROPERTY_REPLACED_BY,
  PropertyDto.JSON_PROPERTY_DEPRECATION_EXPLANATION,
  PropertyDto.JSON_PROPERTY_RELATION_OF_THE_PROPERTY_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES,
  PropertyDto.JSON_PROPERTY_CATALOG_INFORMATION,
  PropertyDto.JSON_PROPERTY_CREATORS_LANGUAGE,
  PropertyDto.JSON_PROPERTY_NAMES_IN_LANGUAGE,
  PropertyDto.JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE,
  PropertyDto.JSON_PROPERTY_DESCRIPTIONS_IN_LANGUAGE,
  PropertyDto.JSON_PROPERTY_EXAMPLES_IN_LANGUAGE,
  PropertyDto.JSON_PROPERTY_CONNECTED_PROPERTIES,
  PropertyDto.JSON_PROPERTY_GROUP_OF_PROPERTIES,
  PropertyDto.JSON_PROPERTY_SYMBOLS_OF_THE_PROPERTY_IN_A_GIVEN_PROPERTY_GROUP,
  PropertyDto.JSON_PROPERTY_VISUAL_REPRESENTATION,
  PropertyDto.JSON_PROPERTY_COUNTRY_OF_USE,
  PropertyDto.JSON_PROPERTY_SUBDIVISION_OF_USE,
  PropertyDto.JSON_PROPERTY_COUNTRY_OF_ORIGIN,
  PropertyDto.JSON_PROPERTY_PHYSICAL_QUANTITY,
  PropertyDto.JSON_PROPERTY_DIMENSION,
  PropertyDto.JSON_PROPERTY_METHOD_OF_MEASUREMENT,
  PropertyDto.JSON_PROPERTY_DATA_TYPE,
  PropertyDto.JSON_PROPERTY_DYNAMIC_PROPERTY,
  PropertyDto.JSON_PROPERTY_PARAMETERS_OF_THE_DYNAMIC_PROPERTY,
  PropertyDto.JSON_PROPERTY_UNITS,
  PropertyDto.JSON_PROPERTY_NAMES_OF_THE_DEFINING_VALUES,
  PropertyDto.JSON_PROPERTY_DEFINING_VALUES,
  PropertyDto.JSON_PROPERTY_TOLERANCE,
  PropertyDto.JSON_PROPERTY_DIGITAL_FORMAT,
  PropertyDto.JSON_PROPERTY_TEXT_FORMAT,
  PropertyDto.JSON_PROPERTY_LIST_OF_POSSIBLE_VALUES_IN_LANGUAGE,
  PropertyDto.JSON_PROPERTY_BOUNDARY_VALUES,
  PropertyDto.JSON_PROPERTY_METADATA,
  PropertyDto.JSON_PROPERTY_BOOKMARKED,
  PropertyDto.JSON_PROPERTY_OBSERVED,
  PropertyDto.JSON_PROPERTY_ORGANISATION_ID,
  PropertyDto.JSON_PROPERTY_ORGANISATION_NAME,
  PropertyDto.JSON_PROPERTY_TAGS,
  PropertyDto.JSON_PROPERTY_ORGANISATION_TYPE,
  PropertyDto.JSON_PROPERTY_CAN_CREATE_NEW_VERSION
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class PropertyDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  /** Gets or Sets status */
  public enum StatusEnum {
    INITIAL("INITIAL"),

    PROPOSED("PROPOSED"),

    CREATION("CREATION"),

    REVIEW("REVIEW"),

    VALIDATION("VALIDATION"),

    ACCEPTED("ACCEPTED"),

    PUBLISHED("PUBLISHED"),

    DEPRECATED("DEPRECATED"),

    SORTED_OUT("SORTED_OUT"),

    REJECTED("REJECTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_DATE_OF_CREATION = "dateOfCreation";
  private OffsetDateTime dateOfCreation;

  public static final String JSON_PROPERTY_DATE_OF_ACTIVATION = "dateOfActivation";
  private OffsetDateTime dateOfActivation;

  public static final String JSON_PROPERTY_DATE_OF_LAST_CHANGE = "dateOfLastChange";
  private OffsetDateTime dateOfLastChange;

  public static final String JSON_PROPERTY_DATE_OF_REVISION = "dateOfRevision";
  private OffsetDateTime dateOfRevision;

  public static final String JSON_PROPERTY_DATE_OF_VERSION = "dateOfVersion";
  private OffsetDateTime dateOfVersion;

  public static final String JSON_PROPERTY_DATE_OF_DEACTIVATION = "dateOfDeactivation";
  private OffsetDateTime dateOfDeactivation;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Long versionNumber;

  public static final String JSON_PROPERTY_REVISION_NUMBER = "revisionNumber";
  private Long revisionNumber;

  public static final String JSON_PROPERTY_REPLACES = "replaces";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> replaces = new ArrayList<>();

  public static final String JSON_PROPERTY_REPLACED_BY = "replacedBy";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy = new ArrayList<>();

  public static final String JSON_PROPERTY_DEPRECATION_EXPLANATION = "deprecationExplanation";
  private String deprecationExplanation;

  public static final String
      JSON_PROPERTY_RELATION_OF_THE_PROPERTY_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES =
          "relationOfThePropertyIdentifiersInTheInterconnectedDictionaries";
  private List<@Valid RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries>
      relationOfThePropertyIdentifiersInTheInterconnectedDictionaries = new ArrayList<>();

  public static final String JSON_PROPERTY_CATALOG_INFORMATION = "catalogInformation";
  private PropertyOrGroupCatalogInformation catalogInformation;

  public static final String JSON_PROPERTY_CREATORS_LANGUAGE = "creatorsLanguage";
  private CountryLanguageCode creatorsLanguage;

  public static final String JSON_PROPERTY_NAMES_IN_LANGUAGE = "namesInLanguage";
  private List<@Valid NamesInLanguageDto> namesInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE = "definitionsInLanguage";
  private List<@Valid DefinitionsInLanguageDto> definitionsInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_DESCRIPTIONS_IN_LANGUAGE = "descriptionsInLanguage";
  private List<@Valid DescriptionsInLanguageDto> descriptionsInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_EXAMPLES_IN_LANGUAGE = "examplesInLanguage";
  private List<@Valid ExamplesInLanguageDto> examplesInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_CONNECTED_PROPERTIES = "connectedProperties";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> connectedProperties = new ArrayList<>();

  public static final String JSON_PROPERTY_GROUP_OF_PROPERTIES = "groupOfProperties";
  private List<@Valid SimpleParentGroup> groupOfProperties = new ArrayList<>();

  public static final String JSON_PROPERTY_SYMBOLS_OF_THE_PROPERTY_IN_A_GIVEN_PROPERTY_GROUP =
      "symbolsOfThePropertyInAGivenPropertyGroup";
  private List<@Valid SymbolsOfTheGivenPropertyGroupDto> symbolsOfThePropertyInAGivenPropertyGroup =
      new ArrayList<>();

  public static final String JSON_PROPERTY_VISUAL_REPRESENTATION = "visualRepresentation";
  private List<String> visualRepresentation = new ArrayList<>();

  public static final String JSON_PROPERTY_COUNTRY_OF_USE = "countryOfUse";
  private List<String> countryOfUse = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBDIVISION_OF_USE = "subdivisionOfUse";
  private List<String> subdivisionOfUse = new ArrayList<>();

  public static final String JSON_PROPERTY_COUNTRY_OF_ORIGIN = "countryOfOrigin";
  private String countryOfOrigin;

  public static final String JSON_PROPERTY_PHYSICAL_QUANTITY = "physicalQuantity";
  private List<@Valid PhysicalQuantity> physicalQuantity = new ArrayList<>();

  public static final String JSON_PROPERTY_DIMENSION = "dimension";
  private String dimension;

  public static final String JSON_PROPERTY_METHOD_OF_MEASUREMENT = "methodOfMeasurement";
  private String methodOfMeasurement;

  public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
  private String dataType;

  public static final String JSON_PROPERTY_DYNAMIC_PROPERTY = "dynamicProperty";
  private String dynamicProperty;

  public static final String JSON_PROPERTY_PARAMETERS_OF_THE_DYNAMIC_PROPERTY =
      "parametersOfTheDynamicProperty";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> parametersOfTheDynamicProperty =
      new ArrayList<>();

  public static final String JSON_PROPERTY_UNITS = "units";
  private List<String> units = new ArrayList<>();

  public static final String JSON_PROPERTY_NAMES_OF_THE_DEFINING_VALUES =
      "namesOfTheDefiningValues";
  private List<@Valid NamesInLanguage> namesOfTheDefiningValues = new ArrayList<>();

  public static final String JSON_PROPERTY_DEFINING_VALUES = "definingValues";
  private List<String> definingValues = new ArrayList<>();

  public static final String JSON_PROPERTY_TOLERANCE = "tolerance";
  private List<BigDecimal> tolerance = new ArrayList<>();

  public static final String JSON_PROPERTY_DIGITAL_FORMAT = "digitalFormat";
  private List<@Valid DigitalFormat> digitalFormat = new ArrayList<>();

  public static final String JSON_PROPERTY_TEXT_FORMAT = "textFormat";
  private TextFormat textFormat;

  public static final String JSON_PROPERTY_LIST_OF_POSSIBLE_VALUES_IN_LANGUAGE =
      "listOfPossibleValuesInLanguage";
  private List<@Valid ListOfPossibleValuesInLanguageDto> listOfPossibleValuesInLanguage =
      new ArrayList<>();

  public static final String JSON_PROPERTY_BOUNDARY_VALUES = "boundaryValues";
  private List<@Valid BoundaryValues> boundaryValues = new ArrayList<>();

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private BimPortalMetadata metadata;

  public static final String JSON_PROPERTY_BOOKMARKED = "bookmarked";
  private BookmarkStatus bookmarked;

  public static final String JSON_PROPERTY_OBSERVED = "observed";
  private ObservationStatus observed;

  public static final String JSON_PROPERTY_ORGANISATION_ID = "organisationId";
  private UUID organisationId;

  public static final String JSON_PROPERTY_ORGANISATION_NAME = "organisationName";
  private String organisationName;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<@Valid TagAssignmentDto> tags = new ArrayList<>();

  /** Gets or Sets organisationType */
  public enum OrganisationTypeEnum {
    SIGNED_IN("SIGNED_IN"),

    DEFINED("DEFINED"),

    BIM_PORTAL("BIM_PORTAL"),

    BUND("BUND");

    private String value;

    OrganisationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrganisationTypeEnum fromValue(String value) {
      for (OrganisationTypeEnum b : OrganisationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORGANISATION_TYPE = "organisationType";
  private OrganisationTypeEnum organisationType;

  public static final String JSON_PROPERTY_CAN_CREATE_NEW_VERSION = "canCreateNewVersion";
  private Boolean canCreateNewVersion;

  public PropertyDto() {}

  public PropertyDto id(UUID id) {

    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }

  public PropertyDto guid(UUID guid) {

    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   *
   * @return guid
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getGuid() {
    return guid;
  }

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }

  public PropertyDto status(StatusEnum status) {

    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatusEnum getStatus() {
    return status;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PropertyDto dateOfCreation(OffsetDateTime dateOfCreation) {

    this.dateOfCreation = dateOfCreation;
    return this;
  }

  /**
   * Get dateOfCreation
   *
   * @return dateOfCreation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfCreation() {
    return dateOfCreation;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfCreation(OffsetDateTime dateOfCreation) {
    this.dateOfCreation = dateOfCreation;
  }

  public PropertyDto dateOfActivation(OffsetDateTime dateOfActivation) {

    this.dateOfActivation = dateOfActivation;
    return this;
  }

  /**
   * Get dateOfActivation
   *
   * @return dateOfActivation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfActivation() {
    return dateOfActivation;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfActivation(OffsetDateTime dateOfActivation) {
    this.dateOfActivation = dateOfActivation;
  }

  public PropertyDto dateOfLastChange(OffsetDateTime dateOfLastChange) {

    this.dateOfLastChange = dateOfLastChange;
    return this;
  }

  /**
   * Get dateOfLastChange
   *
   * @return dateOfLastChange
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfLastChange() {
    return dateOfLastChange;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfLastChange(OffsetDateTime dateOfLastChange) {
    this.dateOfLastChange = dateOfLastChange;
  }

  public PropertyDto dateOfRevision(OffsetDateTime dateOfRevision) {

    this.dateOfRevision = dateOfRevision;
    return this;
  }

  /**
   * Get dateOfRevision
   *
   * @return dateOfRevision
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfRevision() {
    return dateOfRevision;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfRevision(OffsetDateTime dateOfRevision) {
    this.dateOfRevision = dateOfRevision;
  }

  public PropertyDto dateOfVersion(OffsetDateTime dateOfVersion) {

    this.dateOfVersion = dateOfVersion;
    return this;
  }

  /**
   * Get dateOfVersion
   *
   * @return dateOfVersion
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfVersion() {
    return dateOfVersion;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfVersion(OffsetDateTime dateOfVersion) {
    this.dateOfVersion = dateOfVersion;
  }

  public PropertyDto dateOfDeactivation(OffsetDateTime dateOfDeactivation) {

    this.dateOfDeactivation = dateOfDeactivation;
    return this;
  }

  /**
   * Get dateOfDeactivation
   *
   * @return dateOfDeactivation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfDeactivation() {
    return dateOfDeactivation;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfDeactivation(OffsetDateTime dateOfDeactivation) {
    this.dateOfDeactivation = dateOfDeactivation;
  }

  public PropertyDto versionNumber(Long versionNumber) {

    this.versionNumber = versionNumber;
    return this;
  }

  /**
   * Get versionNumber
   *
   * @return versionNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getVersionNumber() {
    return versionNumber;
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionNumber(Long versionNumber) {
    this.versionNumber = versionNumber;
  }

  public PropertyDto revisionNumber(Long revisionNumber) {

    this.revisionNumber = revisionNumber;
    return this;
  }

  /**
   * Get revisionNumber
   *
   * @return revisionNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getRevisionNumber() {
    return revisionNumber;
  }

  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
  }

  public PropertyDto replaces(List<@Valid PropertyOrGroupWithNamesInLanguage> replaces) {

    this.replaces = replaces;
    return this;
  }

  public PropertyDto addReplacesItem(PropertyOrGroupWithNamesInLanguage replacesItem) {
    if (this.replaces == null) {
      this.replaces = new ArrayList<>();
    }
    this.replaces.add(replacesItem);
    return this;
  }

  /**
   * Get replaces
   *
   * @return replaces
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_REPLACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PropertyOrGroupWithNamesInLanguage> getReplaces() {
    return replaces;
  }

  @JsonProperty(JSON_PROPERTY_REPLACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplaces(List<@Valid PropertyOrGroupWithNamesInLanguage> replaces) {
    this.replaces = replaces;
  }

  public PropertyDto replacedBy(List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy) {

    this.replacedBy = replacedBy;
    return this;
  }

  public PropertyDto addReplacedByItem(PropertyOrGroupWithNamesInLanguage replacedByItem) {
    if (this.replacedBy == null) {
      this.replacedBy = new ArrayList<>();
    }
    this.replacedBy.add(replacedByItem);
    return this;
  }

  /**
   * Get replacedBy
   *
   * @return replacedBy
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_REPLACED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PropertyOrGroupWithNamesInLanguage> getReplacedBy() {
    return replacedBy;
  }

  @JsonProperty(JSON_PROPERTY_REPLACED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplacedBy(List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy) {
    this.replacedBy = replacedBy;
  }

  public PropertyDto deprecationExplanation(String deprecationExplanation) {

    this.deprecationExplanation = deprecationExplanation;
    return this;
  }

  /**
   * Get deprecationExplanation
   *
   * @return deprecationExplanation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPRECATION_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeprecationExplanation() {
    return deprecationExplanation;
  }

  @JsonProperty(JSON_PROPERTY_DEPRECATION_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecationExplanation(String deprecationExplanation) {
    this.deprecationExplanation = deprecationExplanation;
  }

  public PropertyDto relationOfThePropertyIdentifiersInTheInterconnectedDictionaries(
      List<@Valid RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries>
          relationOfThePropertyIdentifiersInTheInterconnectedDictionaries) {

    this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries =
        relationOfThePropertyIdentifiersInTheInterconnectedDictionaries;
    return this;
  }

  public PropertyDto addRelationOfThePropertyIdentifiersInTheInterconnectedDictionariesItem(
      RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries
          relationOfThePropertyIdentifiersInTheInterconnectedDictionariesItem) {
    if (this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries == null) {
      this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries = new ArrayList<>();
    }
    this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries.add(
        relationOfThePropertyIdentifiersInTheInterconnectedDictionariesItem);
    return this;
  }

  /**
   * Get relationOfThePropertyIdentifiersInTheInterconnectedDictionaries
   *
   * @return relationOfThePropertyIdentifiersInTheInterconnectedDictionaries
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(
      JSON_PROPERTY_RELATION_OF_THE_PROPERTY_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries>
      getRelationOfThePropertyIdentifiersInTheInterconnectedDictionaries() {
    return relationOfThePropertyIdentifiersInTheInterconnectedDictionaries;
  }

  @JsonProperty(
      JSON_PROPERTY_RELATION_OF_THE_PROPERTY_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationOfThePropertyIdentifiersInTheInterconnectedDictionaries(
      List<@Valid RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries>
          relationOfThePropertyIdentifiersInTheInterconnectedDictionaries) {
    this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries =
        relationOfThePropertyIdentifiersInTheInterconnectedDictionaries;
  }

  public PropertyDto catalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {

    this.catalogInformation = catalogInformation;
    return this;
  }

  /**
   * Get catalogInformation
   *
   * @return catalogInformation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PropertyOrGroupCatalogInformation getCatalogInformation() {
    return catalogInformation;
  }

  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {
    this.catalogInformation = catalogInformation;
  }

  public PropertyDto creatorsLanguage(CountryLanguageCode creatorsLanguage) {

    this.creatorsLanguage = creatorsLanguage;
    return this;
  }

  /**
   * Get creatorsLanguage
   *
   * @return creatorsLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CREATORS_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CountryLanguageCode getCreatorsLanguage() {
    return creatorsLanguage;
  }

  @JsonProperty(JSON_PROPERTY_CREATORS_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatorsLanguage(CountryLanguageCode creatorsLanguage) {
    this.creatorsLanguage = creatorsLanguage;
  }

  public PropertyDto namesInLanguage(List<@Valid NamesInLanguageDto> namesInLanguage) {

    this.namesInLanguage = namesInLanguage;
    return this;
  }

  public PropertyDto addNamesInLanguageItem(NamesInLanguageDto namesInLanguageItem) {
    if (this.namesInLanguage == null) {
      this.namesInLanguage = new ArrayList<>();
    }
    this.namesInLanguage.add(namesInLanguageItem);
    return this;
  }

  /**
   * Get namesInLanguage
   *
   * @return namesInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_NAMES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid NamesInLanguageDto> getNamesInLanguage() {
    return namesInLanguage;
  }

  @JsonProperty(JSON_PROPERTY_NAMES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamesInLanguage(List<@Valid NamesInLanguageDto> namesInLanguage) {
    this.namesInLanguage = namesInLanguage;
  }

  public PropertyDto definitionsInLanguage(
      List<@Valid DefinitionsInLanguageDto> definitionsInLanguage) {

    this.definitionsInLanguage = definitionsInLanguage;
    return this;
  }

  public PropertyDto addDefinitionsInLanguageItem(
      DefinitionsInLanguageDto definitionsInLanguageItem) {
    if (this.definitionsInLanguage == null) {
      this.definitionsInLanguage = new ArrayList<>();
    }
    this.definitionsInLanguage.add(definitionsInLanguageItem);
    return this;
  }

  /**
   * Get definitionsInLanguage
   *
   * @return definitionsInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DefinitionsInLanguageDto> getDefinitionsInLanguage() {
    return definitionsInLanguage;
  }

  @JsonProperty(JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefinitionsInLanguage(
      List<@Valid DefinitionsInLanguageDto> definitionsInLanguage) {
    this.definitionsInLanguage = definitionsInLanguage;
  }

  public PropertyDto descriptionsInLanguage(
      List<@Valid DescriptionsInLanguageDto> descriptionsInLanguage) {

    this.descriptionsInLanguage = descriptionsInLanguage;
    return this;
  }

  public PropertyDto addDescriptionsInLanguageItem(
      DescriptionsInLanguageDto descriptionsInLanguageItem) {
    if (this.descriptionsInLanguage == null) {
      this.descriptionsInLanguage = new ArrayList<>();
    }
    this.descriptionsInLanguage.add(descriptionsInLanguageItem);
    return this;
  }

  /**
   * Get descriptionsInLanguage
   *
   * @return descriptionsInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DESCRIPTIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DescriptionsInLanguageDto> getDescriptionsInLanguage() {
    return descriptionsInLanguage;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescriptionsInLanguage(
      List<@Valid DescriptionsInLanguageDto> descriptionsInLanguage) {
    this.descriptionsInLanguage = descriptionsInLanguage;
  }

  public PropertyDto examplesInLanguage(List<@Valid ExamplesInLanguageDto> examplesInLanguage) {

    this.examplesInLanguage = examplesInLanguage;
    return this;
  }

  public PropertyDto addExamplesInLanguageItem(ExamplesInLanguageDto examplesInLanguageItem) {
    if (this.examplesInLanguage == null) {
      this.examplesInLanguage = new ArrayList<>();
    }
    this.examplesInLanguage.add(examplesInLanguageItem);
    return this;
  }

  /**
   * Get examplesInLanguage
   *
   * @return examplesInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_EXAMPLES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ExamplesInLanguageDto> getExamplesInLanguage() {
    return examplesInLanguage;
  }

  @JsonProperty(JSON_PROPERTY_EXAMPLES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExamplesInLanguage(List<@Valid ExamplesInLanguageDto> examplesInLanguage) {
    this.examplesInLanguage = examplesInLanguage;
  }

  public PropertyDto connectedProperties(
      List<@Valid PropertyOrGroupWithNamesInLanguage> connectedProperties) {

    this.connectedProperties = connectedProperties;
    return this;
  }

  public PropertyDto addConnectedPropertiesItem(
      PropertyOrGroupWithNamesInLanguage connectedPropertiesItem) {
    if (this.connectedProperties == null) {
      this.connectedProperties = new ArrayList<>();
    }
    this.connectedProperties.add(connectedPropertiesItem);
    return this;
  }

  /**
   * Get connectedProperties
   *
   * @return connectedProperties
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CONNECTED_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PropertyOrGroupWithNamesInLanguage> getConnectedProperties() {
    return connectedProperties;
  }

  @JsonProperty(JSON_PROPERTY_CONNECTED_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectedProperties(
      List<@Valid PropertyOrGroupWithNamesInLanguage> connectedProperties) {
    this.connectedProperties = connectedProperties;
  }

  public PropertyDto groupOfProperties(List<@Valid SimpleParentGroup> groupOfProperties) {

    this.groupOfProperties = groupOfProperties;
    return this;
  }

  public PropertyDto addGroupOfPropertiesItem(SimpleParentGroup groupOfPropertiesItem) {
    if (this.groupOfProperties == null) {
      this.groupOfProperties = new ArrayList<>();
    }
    this.groupOfProperties.add(groupOfPropertiesItem);
    return this;
  }

  /**
   * Get groupOfProperties
   *
   * @return groupOfProperties
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_GROUP_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid SimpleParentGroup> getGroupOfProperties() {
    return groupOfProperties;
  }

  @JsonProperty(JSON_PROPERTY_GROUP_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupOfProperties(List<@Valid SimpleParentGroup> groupOfProperties) {
    this.groupOfProperties = groupOfProperties;
  }

  public PropertyDto symbolsOfThePropertyInAGivenPropertyGroup(
      List<@Valid SymbolsOfTheGivenPropertyGroupDto> symbolsOfThePropertyInAGivenPropertyGroup) {

    this.symbolsOfThePropertyInAGivenPropertyGroup = symbolsOfThePropertyInAGivenPropertyGroup;
    return this;
  }

  public PropertyDto addSymbolsOfThePropertyInAGivenPropertyGroupItem(
      SymbolsOfTheGivenPropertyGroupDto symbolsOfThePropertyInAGivenPropertyGroupItem) {
    if (this.symbolsOfThePropertyInAGivenPropertyGroup == null) {
      this.symbolsOfThePropertyInAGivenPropertyGroup = new ArrayList<>();
    }
    this.symbolsOfThePropertyInAGivenPropertyGroup.add(
        symbolsOfThePropertyInAGivenPropertyGroupItem);
    return this;
  }

  /**
   * Get symbolsOfThePropertyInAGivenPropertyGroup
   *
   * @return symbolsOfThePropertyInAGivenPropertyGroup
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_SYMBOLS_OF_THE_PROPERTY_IN_A_GIVEN_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid SymbolsOfTheGivenPropertyGroupDto>
      getSymbolsOfThePropertyInAGivenPropertyGroup() {
    return symbolsOfThePropertyInAGivenPropertyGroup;
  }

  @JsonProperty(JSON_PROPERTY_SYMBOLS_OF_THE_PROPERTY_IN_A_GIVEN_PROPERTY_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbolsOfThePropertyInAGivenPropertyGroup(
      List<@Valid SymbolsOfTheGivenPropertyGroupDto> symbolsOfThePropertyInAGivenPropertyGroup) {
    this.symbolsOfThePropertyInAGivenPropertyGroup = symbolsOfThePropertyInAGivenPropertyGroup;
  }

  public PropertyDto visualRepresentation(List<String> visualRepresentation) {

    this.visualRepresentation = visualRepresentation;
    return this;
  }

  public PropertyDto addVisualRepresentationItem(String visualRepresentationItem) {
    if (this.visualRepresentation == null) {
      this.visualRepresentation = new ArrayList<>();
    }
    this.visualRepresentation.add(visualRepresentationItem);
    return this;
  }

  /**
   * Get visualRepresentation
   *
   * @return visualRepresentation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISUAL_REPRESENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getVisualRepresentation() {
    return visualRepresentation;
  }

  @JsonProperty(JSON_PROPERTY_VISUAL_REPRESENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisualRepresentation(List<String> visualRepresentation) {
    this.visualRepresentation = visualRepresentation;
  }

  public PropertyDto countryOfUse(List<String> countryOfUse) {

    this.countryOfUse = countryOfUse;
    return this;
  }

  public PropertyDto addCountryOfUseItem(String countryOfUseItem) {
    if (this.countryOfUse == null) {
      this.countryOfUse = new ArrayList<>();
    }
    this.countryOfUse.add(countryOfUseItem);
    return this;
  }

  /**
   * Get countryOfUse
   *
   * @return countryOfUse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getCountryOfUse() {
    return countryOfUse;
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryOfUse(List<String> countryOfUse) {
    this.countryOfUse = countryOfUse;
  }

  public PropertyDto subdivisionOfUse(List<String> subdivisionOfUse) {

    this.subdivisionOfUse = subdivisionOfUse;
    return this;
  }

  public PropertyDto addSubdivisionOfUseItem(String subdivisionOfUseItem) {
    if (this.subdivisionOfUse == null) {
      this.subdivisionOfUse = new ArrayList<>();
    }
    this.subdivisionOfUse.add(subdivisionOfUseItem);
    return this;
  }

  /**
   * Get subdivisionOfUse
   *
   * @return subdivisionOfUse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBDIVISION_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSubdivisionOfUse() {
    return subdivisionOfUse;
  }

  @JsonProperty(JSON_PROPERTY_SUBDIVISION_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubdivisionOfUse(List<String> subdivisionOfUse) {
    this.subdivisionOfUse = subdivisionOfUse;
  }

  public PropertyDto countryOfOrigin(String countryOfOrigin) {

    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * Get countryOfOrigin
   *
   * @return countryOfOrigin
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }

  public PropertyDto physicalQuantity(List<@Valid PhysicalQuantity> physicalQuantity) {

    this.physicalQuantity = physicalQuantity;
    return this;
  }

  public PropertyDto addPhysicalQuantityItem(PhysicalQuantity physicalQuantityItem) {
    if (this.physicalQuantity == null) {
      this.physicalQuantity = new ArrayList<>();
    }
    this.physicalQuantity.add(physicalQuantityItem);
    return this;
  }

  /**
   * Get physicalQuantity
   *
   * @return physicalQuantity
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_PHYSICAL_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PhysicalQuantity> getPhysicalQuantity() {
    return physicalQuantity;
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysicalQuantity(List<@Valid PhysicalQuantity> physicalQuantity) {
    this.physicalQuantity = physicalQuantity;
  }

  public PropertyDto dimension(String dimension) {

    this.dimension = dimension;
    return this;
  }

  /**
   * Enthält die Dimension der Einheiten in der folgenden Reihenfolge: Länge, Masse, Zeit,
   * Stoffmenge, Lichtstärke, Stromstärke, Temperatur
   *
   * @return dimension
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDimension() {
    return dimension;
  }

  @JsonProperty(JSON_PROPERTY_DIMENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimension(String dimension) {
    this.dimension = dimension;
  }

  public PropertyDto methodOfMeasurement(String methodOfMeasurement) {

    this.methodOfMeasurement = methodOfMeasurement;
    return this;
  }

  /**
   * Get methodOfMeasurement
   *
   * @return methodOfMeasurement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD_OF_MEASUREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMethodOfMeasurement() {
    return methodOfMeasurement;
  }

  @JsonProperty(JSON_PROPERTY_METHOD_OF_MEASUREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethodOfMeasurement(String methodOfMeasurement) {
    this.methodOfMeasurement = methodOfMeasurement;
  }

  public PropertyDto dataType(String dataType) {

    this.dataType = dataType;
    return this;
  }

  /**
   * Get dataType
   *
   * @return dataType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDataType() {
    return dataType;
  }

  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataType(String dataType) {
    this.dataType = dataType;
  }

  public PropertyDto dynamicProperty(String dynamicProperty) {

    this.dynamicProperty = dynamicProperty;
    return this;
  }

  /**
   * Get dynamicProperty
   *
   * @return dynamicProperty
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DYNAMIC_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDynamicProperty() {
    return dynamicProperty;
  }

  @JsonProperty(JSON_PROPERTY_DYNAMIC_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDynamicProperty(String dynamicProperty) {
    this.dynamicProperty = dynamicProperty;
  }

  public PropertyDto parametersOfTheDynamicProperty(
      List<@Valid PropertyOrGroupWithNamesInLanguage> parametersOfTheDynamicProperty) {

    this.parametersOfTheDynamicProperty = parametersOfTheDynamicProperty;
    return this;
  }

  public PropertyDto addParametersOfTheDynamicPropertyItem(
      PropertyOrGroupWithNamesInLanguage parametersOfTheDynamicPropertyItem) {
    if (this.parametersOfTheDynamicProperty == null) {
      this.parametersOfTheDynamicProperty = new ArrayList<>();
    }
    this.parametersOfTheDynamicProperty.add(parametersOfTheDynamicPropertyItem);
    return this;
  }

  /**
   * Get parametersOfTheDynamicProperty
   *
   * @return parametersOfTheDynamicProperty
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_PARAMETERS_OF_THE_DYNAMIC_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PropertyOrGroupWithNamesInLanguage> getParametersOfTheDynamicProperty() {
    return parametersOfTheDynamicProperty;
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS_OF_THE_DYNAMIC_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParametersOfTheDynamicProperty(
      List<@Valid PropertyOrGroupWithNamesInLanguage> parametersOfTheDynamicProperty) {
    this.parametersOfTheDynamicProperty = parametersOfTheDynamicProperty;
  }

  public PropertyDto units(List<String> units) {

    this.units = units;
    return this;
  }

  public PropertyDto addUnitsItem(String unitsItem) {
    if (this.units == null) {
      this.units = new ArrayList<>();
    }
    this.units.add(unitsItem);
    return this;
  }

  /**
   * Get units
   *
   * @return units
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getUnits() {
    return units;
  }

  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnits(List<String> units) {
    this.units = units;
  }

  public PropertyDto namesOfTheDefiningValues(
      List<@Valid NamesInLanguage> namesOfTheDefiningValues) {

    this.namesOfTheDefiningValues = namesOfTheDefiningValues;
    return this;
  }

  public PropertyDto addNamesOfTheDefiningValuesItem(NamesInLanguage namesOfTheDefiningValuesItem) {
    if (this.namesOfTheDefiningValues == null) {
      this.namesOfTheDefiningValues = new ArrayList<>();
    }
    this.namesOfTheDefiningValues.add(namesOfTheDefiningValuesItem);
    return this;
  }

  /**
   * Get namesOfTheDefiningValues
   *
   * @return namesOfTheDefiningValues
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_NAMES_OF_THE_DEFINING_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid NamesInLanguage> getNamesOfTheDefiningValues() {
    return namesOfTheDefiningValues;
  }

  @JsonProperty(JSON_PROPERTY_NAMES_OF_THE_DEFINING_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamesOfTheDefiningValues(List<@Valid NamesInLanguage> namesOfTheDefiningValues) {
    this.namesOfTheDefiningValues = namesOfTheDefiningValues;
  }

  public PropertyDto definingValues(List<String> definingValues) {

    this.definingValues = definingValues;
    return this;
  }

  public PropertyDto addDefiningValuesItem(String definingValuesItem) {
    if (this.definingValues == null) {
      this.definingValues = new ArrayList<>();
    }
    this.definingValues.add(definingValuesItem);
    return this;
  }

  /**
   * Get definingValues
   *
   * @return definingValues
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFINING_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDefiningValues() {
    return definingValues;
  }

  @JsonProperty(JSON_PROPERTY_DEFINING_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefiningValues(List<String> definingValues) {
    this.definingValues = definingValues;
  }

  public PropertyDto tolerance(List<BigDecimal> tolerance) {

    this.tolerance = tolerance;
    return this;
  }

  public PropertyDto addToleranceItem(BigDecimal toleranceItem) {
    if (this.tolerance == null) {
      this.tolerance = new ArrayList<>();
    }
    this.tolerance.add(toleranceItem);
    return this;
  }

  /**
   * Get tolerance
   *
   * @return tolerance
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<BigDecimal> getTolerance() {
    return tolerance;
  }

  @JsonProperty(JSON_PROPERTY_TOLERANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTolerance(List<BigDecimal> tolerance) {
    this.tolerance = tolerance;
  }

  public PropertyDto digitalFormat(List<@Valid DigitalFormat> digitalFormat) {

    this.digitalFormat = digitalFormat;
    return this;
  }

  public PropertyDto addDigitalFormatItem(DigitalFormat digitalFormatItem) {
    if (this.digitalFormat == null) {
      this.digitalFormat = new ArrayList<>();
    }
    this.digitalFormat.add(digitalFormatItem);
    return this;
  }

  /**
   * Get digitalFormat
   *
   * @return digitalFormat
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DIGITAL_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DigitalFormat> getDigitalFormat() {
    return digitalFormat;
  }

  @JsonProperty(JSON_PROPERTY_DIGITAL_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDigitalFormat(List<@Valid DigitalFormat> digitalFormat) {
    this.digitalFormat = digitalFormat;
  }

  public PropertyDto textFormat(TextFormat textFormat) {

    this.textFormat = textFormat;
    return this;
  }

  /**
   * Get textFormat
   *
   * @return textFormat
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_TEXT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TextFormat getTextFormat() {
    return textFormat;
  }

  @JsonProperty(JSON_PROPERTY_TEXT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextFormat(TextFormat textFormat) {
    this.textFormat = textFormat;
  }

  public PropertyDto listOfPossibleValuesInLanguage(
      List<@Valid ListOfPossibleValuesInLanguageDto> listOfPossibleValuesInLanguage) {

    this.listOfPossibleValuesInLanguage = listOfPossibleValuesInLanguage;
    return this;
  }

  public PropertyDto addListOfPossibleValuesInLanguageItem(
      ListOfPossibleValuesInLanguageDto listOfPossibleValuesInLanguageItem) {
    if (this.listOfPossibleValuesInLanguage == null) {
      this.listOfPossibleValuesInLanguage = new ArrayList<>();
    }
    this.listOfPossibleValuesInLanguage.add(listOfPossibleValuesInLanguageItem);
    return this;
  }

  /**
   * Get listOfPossibleValuesInLanguage
   *
   * @return listOfPossibleValuesInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_LIST_OF_POSSIBLE_VALUES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ListOfPossibleValuesInLanguageDto> getListOfPossibleValuesInLanguage() {
    return listOfPossibleValuesInLanguage;
  }

  @JsonProperty(JSON_PROPERTY_LIST_OF_POSSIBLE_VALUES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListOfPossibleValuesInLanguage(
      List<@Valid ListOfPossibleValuesInLanguageDto> listOfPossibleValuesInLanguage) {
    this.listOfPossibleValuesInLanguage = listOfPossibleValuesInLanguage;
  }

  public PropertyDto boundaryValues(List<@Valid BoundaryValues> boundaryValues) {

    this.boundaryValues = boundaryValues;
    return this;
  }

  public PropertyDto addBoundaryValuesItem(BoundaryValues boundaryValuesItem) {
    if (this.boundaryValues == null) {
      this.boundaryValues = new ArrayList<>();
    }
    this.boundaryValues.add(boundaryValuesItem);
    return this;
  }

  /**
   * Get boundaryValues
   *
   * @return boundaryValues
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_BOUNDARY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid BoundaryValues> getBoundaryValues() {
    return boundaryValues;
  }

  @JsonProperty(JSON_PROPERTY_BOUNDARY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBoundaryValues(List<@Valid BoundaryValues> boundaryValues) {
    this.boundaryValues = boundaryValues;
  }

  public PropertyDto metadata(BimPortalMetadata metadata) {

    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   *
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BimPortalMetadata getMetadata() {
    return metadata;
  }

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(BimPortalMetadata metadata) {
    this.metadata = metadata;
  }

  public PropertyDto bookmarked(BookmarkStatus bookmarked) {

    this.bookmarked = bookmarked;
    return this;
  }

  /**
   * Get bookmarked
   *
   * @return bookmarked
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BookmarkStatus getBookmarked() {
    return bookmarked;
  }

  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookmarked(BookmarkStatus bookmarked) {
    this.bookmarked = bookmarked;
  }

  public PropertyDto observed(ObservationStatus observed) {

    this.observed = observed;
    return this;
  }

  /**
   * Get observed
   *
   * @return observed
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_OBSERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ObservationStatus getObserved() {
    return observed;
  }

  @JsonProperty(JSON_PROPERTY_OBSERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObserved(ObservationStatus observed) {
    this.observed = observed;
  }

  public PropertyDto organisationId(UUID organisationId) {

    this.organisationId = organisationId;
    return this;
  }

  /**
   * Get organisationId
   *
   * @return organisationId
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getOrganisationId() {
    return organisationId;
  }

  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }

  public PropertyDto organisationName(String organisationName) {

    this.organisationName = organisationName;
    return this;
  }

  /**
   * Get organisationName
   *
   * @return organisationName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrganisationName() {
    return organisationName;
  }

  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }

  public PropertyDto tags(List<@Valid TagAssignmentDto> tags) {

    this.tags = tags;
    return this;
  }

  public PropertyDto addTagsItem(TagAssignmentDto tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   *
   * @return tags
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid TagAssignmentDto> getTags() {
    return tags;
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<@Valid TagAssignmentDto> tags) {
    this.tags = tags;
  }

  public PropertyDto organisationType(OrganisationTypeEnum organisationType) {

    this.organisationType = organisationType;
    return this;
  }

  /**
   * Get organisationType
   *
   * @return organisationType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANISATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OrganisationTypeEnum getOrganisationType() {
    return organisationType;
  }

  @JsonProperty(JSON_PROPERTY_ORGANISATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationType(OrganisationTypeEnum organisationType) {
    this.organisationType = organisationType;
  }

  public PropertyDto canCreateNewVersion(Boolean canCreateNewVersion) {

    this.canCreateNewVersion = canCreateNewVersion;
    return this;
  }

  /**
   * Get canCreateNewVersion
   *
   * @return canCreateNewVersion
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanCreateNewVersion() {
    return canCreateNewVersion;
  }

  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanCreateNewVersion(Boolean canCreateNewVersion) {
    this.canCreateNewVersion = canCreateNewVersion;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyDto propertyDto = (PropertyDto) o;
    return Objects.equals(this.id, propertyDto.id)
        && Objects.equals(this.guid, propertyDto.guid)
        && Objects.equals(this.status, propertyDto.status)
        && Objects.equals(this.dateOfCreation, propertyDto.dateOfCreation)
        && Objects.equals(this.dateOfActivation, propertyDto.dateOfActivation)
        && Objects.equals(this.dateOfLastChange, propertyDto.dateOfLastChange)
        && Objects.equals(this.dateOfRevision, propertyDto.dateOfRevision)
        && Objects.equals(this.dateOfVersion, propertyDto.dateOfVersion)
        && Objects.equals(this.dateOfDeactivation, propertyDto.dateOfDeactivation)
        && Objects.equals(this.versionNumber, propertyDto.versionNumber)
        && Objects.equals(this.revisionNumber, propertyDto.revisionNumber)
        && Objects.equals(this.replaces, propertyDto.replaces)
        && Objects.equals(this.replacedBy, propertyDto.replacedBy)
        && Objects.equals(this.deprecationExplanation, propertyDto.deprecationExplanation)
        && Objects.equals(
            this.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries,
            propertyDto.relationOfThePropertyIdentifiersInTheInterconnectedDictionaries)
        && Objects.equals(this.catalogInformation, propertyDto.catalogInformation)
        && Objects.equals(this.creatorsLanguage, propertyDto.creatorsLanguage)
        && Objects.equals(this.namesInLanguage, propertyDto.namesInLanguage)
        && Objects.equals(this.definitionsInLanguage, propertyDto.definitionsInLanguage)
        && Objects.equals(this.descriptionsInLanguage, propertyDto.descriptionsInLanguage)
        && Objects.equals(this.examplesInLanguage, propertyDto.examplesInLanguage)
        && Objects.equals(this.connectedProperties, propertyDto.connectedProperties)
        && Objects.equals(this.groupOfProperties, propertyDto.groupOfProperties)
        && Objects.equals(
            this.symbolsOfThePropertyInAGivenPropertyGroup,
            propertyDto.symbolsOfThePropertyInAGivenPropertyGroup)
        && Objects.equals(this.visualRepresentation, propertyDto.visualRepresentation)
        && Objects.equals(this.countryOfUse, propertyDto.countryOfUse)
        && Objects.equals(this.subdivisionOfUse, propertyDto.subdivisionOfUse)
        && Objects.equals(this.countryOfOrigin, propertyDto.countryOfOrigin)
        && Objects.equals(this.physicalQuantity, propertyDto.physicalQuantity)
        && Objects.equals(this.dimension, propertyDto.dimension)
        && Objects.equals(this.methodOfMeasurement, propertyDto.methodOfMeasurement)
        && Objects.equals(this.dataType, propertyDto.dataType)
        && Objects.equals(this.dynamicProperty, propertyDto.dynamicProperty)
        && Objects.equals(
            this.parametersOfTheDynamicProperty, propertyDto.parametersOfTheDynamicProperty)
        && Objects.equals(this.units, propertyDto.units)
        && Objects.equals(this.namesOfTheDefiningValues, propertyDto.namesOfTheDefiningValues)
        && Objects.equals(this.definingValues, propertyDto.definingValues)
        && Objects.equals(this.tolerance, propertyDto.tolerance)
        && Objects.equals(this.digitalFormat, propertyDto.digitalFormat)
        && Objects.equals(this.textFormat, propertyDto.textFormat)
        && Objects.equals(
            this.listOfPossibleValuesInLanguage, propertyDto.listOfPossibleValuesInLanguage)
        && Objects.equals(this.boundaryValues, propertyDto.boundaryValues)
        && Objects.equals(this.metadata, propertyDto.metadata)
        && Objects.equals(this.bookmarked, propertyDto.bookmarked)
        && Objects.equals(this.observed, propertyDto.observed)
        && Objects.equals(this.organisationId, propertyDto.organisationId)
        && Objects.equals(this.organisationName, propertyDto.organisationName)
        && Objects.equals(this.tags, propertyDto.tags)
        && Objects.equals(this.organisationType, propertyDto.organisationType)
        && Objects.equals(this.canCreateNewVersion, propertyDto.canCreateNewVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        guid,
        status,
        dateOfCreation,
        dateOfActivation,
        dateOfLastChange,
        dateOfRevision,
        dateOfVersion,
        dateOfDeactivation,
        versionNumber,
        revisionNumber,
        replaces,
        replacedBy,
        deprecationExplanation,
        relationOfThePropertyIdentifiersInTheInterconnectedDictionaries,
        catalogInformation,
        creatorsLanguage,
        namesInLanguage,
        definitionsInLanguage,
        descriptionsInLanguage,
        examplesInLanguage,
        connectedProperties,
        groupOfProperties,
        symbolsOfThePropertyInAGivenPropertyGroup,
        visualRepresentation,
        countryOfUse,
        subdivisionOfUse,
        countryOfOrigin,
        physicalQuantity,
        dimension,
        methodOfMeasurement,
        dataType,
        dynamicProperty,
        parametersOfTheDynamicProperty,
        units,
        namesOfTheDefiningValues,
        definingValues,
        tolerance,
        digitalFormat,
        textFormat,
        listOfPossibleValuesInLanguage,
        boundaryValues,
        metadata,
        bookmarked,
        observed,
        organisationId,
        organisationName,
        tags,
        organisationType,
        canCreateNewVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    dateOfCreation: ").append(toIndentedString(dateOfCreation)).append("\n");
    sb.append("    dateOfActivation: ").append(toIndentedString(dateOfActivation)).append("\n");
    sb.append("    dateOfLastChange: ").append(toIndentedString(dateOfLastChange)).append("\n");
    sb.append("    dateOfRevision: ").append(toIndentedString(dateOfRevision)).append("\n");
    sb.append("    dateOfVersion: ").append(toIndentedString(dateOfVersion)).append("\n");
    sb.append("    dateOfDeactivation: ").append(toIndentedString(dateOfDeactivation)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    replaces: ").append(toIndentedString(replaces)).append("\n");
    sb.append("    replacedBy: ").append(toIndentedString(replacedBy)).append("\n");
    sb.append("    deprecationExplanation: ")
        .append(toIndentedString(deprecationExplanation))
        .append("\n");
    sb.append("    relationOfThePropertyIdentifiersInTheInterconnectedDictionaries: ")
        .append(toIndentedString(relationOfThePropertyIdentifiersInTheInterconnectedDictionaries))
        .append("\n");
    sb.append("    catalogInformation: ").append(toIndentedString(catalogInformation)).append("\n");
    sb.append("    creatorsLanguage: ").append(toIndentedString(creatorsLanguage)).append("\n");
    sb.append("    namesInLanguage: ").append(toIndentedString(namesInLanguage)).append("\n");
    sb.append("    definitionsInLanguage: ")
        .append(toIndentedString(definitionsInLanguage))
        .append("\n");
    sb.append("    descriptionsInLanguage: ")
        .append(toIndentedString(descriptionsInLanguage))
        .append("\n");
    sb.append("    examplesInLanguage: ").append(toIndentedString(examplesInLanguage)).append("\n");
    sb.append("    connectedProperties: ")
        .append(toIndentedString(connectedProperties))
        .append("\n");
    sb.append("    groupOfProperties: ").append(toIndentedString(groupOfProperties)).append("\n");
    sb.append("    symbolsOfThePropertyInAGivenPropertyGroup: ")
        .append(toIndentedString(symbolsOfThePropertyInAGivenPropertyGroup))
        .append("\n");
    sb.append("    visualRepresentation: ")
        .append(toIndentedString(visualRepresentation))
        .append("\n");
    sb.append("    countryOfUse: ").append(toIndentedString(countryOfUse)).append("\n");
    sb.append("    subdivisionOfUse: ").append(toIndentedString(subdivisionOfUse)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    physicalQuantity: ").append(toIndentedString(physicalQuantity)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    methodOfMeasurement: ")
        .append(toIndentedString(methodOfMeasurement))
        .append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    dynamicProperty: ").append(toIndentedString(dynamicProperty)).append("\n");
    sb.append("    parametersOfTheDynamicProperty: ")
        .append(toIndentedString(parametersOfTheDynamicProperty))
        .append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    namesOfTheDefiningValues: ")
        .append(toIndentedString(namesOfTheDefiningValues))
        .append("\n");
    sb.append("    definingValues: ").append(toIndentedString(definingValues)).append("\n");
    sb.append("    tolerance: ").append(toIndentedString(tolerance)).append("\n");
    sb.append("    digitalFormat: ").append(toIndentedString(digitalFormat)).append("\n");
    sb.append("    textFormat: ").append(toIndentedString(textFormat)).append("\n");
    sb.append("    listOfPossibleValuesInLanguage: ")
        .append(toIndentedString(listOfPossibleValuesInLanguage))
        .append("\n");
    sb.append("    boundaryValues: ").append(toIndentedString(boundaryValues)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    bookmarked: ").append(toIndentedString(bookmarked)).append("\n");
    sb.append("    observed: ").append(toIndentedString(observed)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    organisationType: ").append(toIndentedString(organisationType)).append("\n");
    sb.append("    canCreateNewVersion: ")
        .append(toIndentedString(canCreateNewVersion))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
