/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * FilterDto
 */
@JsonPropertyOrder({
  FilterDto.JSON_PROPERTY_ID,
  FilterDto.JSON_PROPERTY_NAME,
  FilterDto.JSON_PROPERTY_ORGANISATION_ID,
  FilterDto.JSON_PROPERTY_FILTER_GROUP_NAME,
  FilterDto.JSON_PROPERTY_FILTER_GROUP,
  FilterDto.JSON_PROPERTY_GLOBAL,
  FilterDto.JSON_PROPERTY_ASSIGNMENT_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class FilterDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORGANISATION_ID = "organisationId";
  private UUID organisationId;

  public static final String JSON_PROPERTY_FILTER_GROUP_NAME = "filterGroupName";
  private String filterGroupName;

  public static final String JSON_PROPERTY_FILTER_GROUP = "filterGroup";
  private UUID filterGroup;

  public static final String JSON_PROPERTY_GLOBAL = "global";
  private Boolean global;

  public static final String JSON_PROPERTY_ASSIGNMENT_COUNT = "assignmentCount";
  private Integer assignmentCount;

  public FilterDto() {
  }

  public FilterDto id(UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public FilterDto name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=1)
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public FilterDto organisationId(UUID organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

  /**
   * Get organisationId
   * @return organisationId
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getOrganisationId() {
    return organisationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }


  public FilterDto filterGroupName(String filterGroupName) {
    
    this.filterGroupName = filterGroupName;
    return this;
  }

  /**
   * Get filterGroupName
   * @return filterGroupName
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FILTER_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilterGroupName() {
    return filterGroupName;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterGroupName(String filterGroupName) {
    this.filterGroupName = filterGroupName;
  }


  public FilterDto filterGroup(UUID filterGroup) {
    
    this.filterGroup = filterGroup;
    return this;
  }

  /**
   * Get filterGroup
   * @return filterGroup
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_FILTER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getFilterGroup() {
    return filterGroup;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterGroup(UUID filterGroup) {
    this.filterGroup = filterGroup;
  }


  public FilterDto global(Boolean global) {
    
    this.global = global;
    return this;
  }

  /**
   * Get global
   * @return global
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGlobal() {
    return global;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobal(Boolean global) {
    this.global = global;
  }


  public FilterDto assignmentCount(Integer assignmentCount) {
    
    this.assignmentCount = assignmentCount;
    return this;
  }

  /**
   * Get assignmentCount
   * @return assignmentCount
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ASSIGNMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAssignmentCount() {
    return assignmentCount;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssignmentCount(Integer assignmentCount) {
    this.assignmentCount = assignmentCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterDto filterDto = (FilterDto) o;
    return Objects.equals(this.id, filterDto.id) &&
        Objects.equals(this.name, filterDto.name) &&
        Objects.equals(this.organisationId, filterDto.organisationId) &&
        Objects.equals(this.filterGroupName, filterDto.filterGroupName) &&
        Objects.equals(this.filterGroup, filterDto.filterGroup) &&
        Objects.equals(this.global, filterDto.global) &&
        Objects.equals(this.assignmentCount, filterDto.assignmentCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, organisationId, filterGroupName, filterGroup, global, assignmentCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    filterGroupName: ").append(toIndentedString(filterGroupName)).append("\n");
    sb.append("    filterGroup: ").append(toIndentedString(filterGroup)).append("\n");
    sb.append("    global: ").append(toIndentedString(global)).append("\n");
    sb.append("    assignmentCount: ").append(toIndentedString(assignmentCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

