/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;
import org.hibernate.validator.constraints.*;

/** FilterGroupForPublicDto */
@JsonPropertyOrder({
  FilterGroupForPublicDto.JSON_PROPERTY_NAME,
  FilterGroupForPublicDto.JSON_PROPERTY_GUID,
  FilterGroupForPublicDto.JSON_PROPERTY_FILTER
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class FilterGroupForPublicDto {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  public static final String JSON_PROPERTY_FILTER =
      "filters"; // wrong in the current swagger definition (as filter)
  private List<@Valid FilterForPublicDto> filter = new ArrayList<>();

  public FilterGroupForPublicDto() {}

  public FilterGroupForPublicDto name(String name) {

    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Size(min = 1)
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }

  public FilterGroupForPublicDto guid(UUID guid) {

    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   *
   * @return guid
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UUID getGuid() {
    return guid;
  }

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }

  public FilterGroupForPublicDto filter(List<@Valid FilterForPublicDto> filter) {

    this.filter = filter;
    return this;
  }

  public FilterGroupForPublicDto addFilterItem(FilterForPublicDto filterItem) {
    if (this.filter == null) {
      this.filter = new ArrayList<>();
    }
    this.filter.add(filterItem);
    return this;
  }

  /**
   * Get filter
   *
   * @return filter
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid FilterForPublicDto> getFilter() {
    return filter;
  }

  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(List<@Valid FilterForPublicDto> filter) {
    this.filter = filter;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterGroupForPublicDto filterGroupForPublicDto = (FilterGroupForPublicDto) o;
    return Objects.equals(this.name, filterGroupForPublicDto.name)
        && Objects.equals(this.guid, filterGroupForPublicDto.guid)
        && Objects.equals(this.filter, filterGroupForPublicDto.filter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, guid, filter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterGroupForPublicDto {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
