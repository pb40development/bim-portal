/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.bimportal.client.model.BimPortalMetadata;
import com.bimportal.client.model.BookmarkStatus;
import com.bimportal.client.model.CountryLanguageCode;
import com.bimportal.client.model.DefinitionsInLanguageDto;
import com.bimportal.client.model.NamesInLanguageDto;
import com.bimportal.client.model.ObservationStatus;
import com.bimportal.client.model.PropertyDto;
import com.bimportal.client.model.PropertyGroupTagDto;
import com.bimportal.client.model.PropertyOrGroupCatalogInformation;
import com.bimportal.client.model.PropertyOrGroupWithNamesInLanguage;
import com.bimportal.client.model.RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries;
import com.bimportal.client.model.SimpleInheritedPropertyDto;
import com.bimportal.client.model.SimpleParentGroup;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * PropertyGroupDto
 */
@JsonPropertyOrder({
  PropertyGroupDto.JSON_PROPERTY_ID,
  PropertyGroupDto.JSON_PROPERTY_GUID,
  PropertyGroupDto.JSON_PROPERTY_INFORMATION_ELEMENT_STATUS,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_CREATION,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_ACTIVATION,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_LAST_CHANGE,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_REVISION,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_VERSION,
  PropertyGroupDto.JSON_PROPERTY_DATE_OF_DEACTIVATION,
  PropertyGroupDto.JSON_PROPERTY_VERSION_NUMBER,
  PropertyGroupDto.JSON_PROPERTY_REVISION_NUMBER,
  PropertyGroupDto.JSON_PROPERTY_REPLACES,
  PropertyGroupDto.JSON_PROPERTY_REPLACED_BY,
  PropertyGroupDto.JSON_PROPERTY_DEPRECATION_EXPLANATION,
  PropertyGroupDto.JSON_PROPERTY_RELATION_OF_THE_PROPERTY_GROUP_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES,
  PropertyGroupDto.JSON_PROPERTY_CREATORS_LANGUAGE,
  PropertyGroupDto.JSON_PROPERTY_NAMES_IN_LANGUAGE,
  PropertyGroupDto.JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE,
  PropertyGroupDto.JSON_PROPERTY_VISUAL_REPRESENTATION,
  PropertyGroupDto.JSON_PROPERTY_COUNTRY_OF_USE,
  PropertyGroupDto.JSON_PROPERTY_SUBDIVISION_OF_USE,
  PropertyGroupDto.JSON_PROPERTY_COUNTRY_OF_ORIGIN,
  PropertyGroupDto.JSON_PROPERTY_CATEGORY_OF_GROUP_OF_PROPERTIES,
  PropertyGroupDto.JSON_PROPERTY_PROPERTIES,
  PropertyGroupDto.JSON_PROPERTY_CHILDREN_PROPERTY_GROUPS,
  PropertyGroupDto.JSON_PROPERTY_PARENT_GROUP,
  PropertyGroupDto.JSON_PROPERTY_METADATA,
  PropertyGroupDto.JSON_PROPERTY_BOOKMARKED,
  PropertyGroupDto.JSON_PROPERTY_OBSERVED,
  PropertyGroupDto.JSON_PROPERTY_SIMPLE_INHERITED_PROPERTIES,
  PropertyGroupDto.JSON_PROPERTY_ORGANISATION_ID,
  PropertyGroupDto.JSON_PROPERTY_ORGANISATION_NAME,
  PropertyGroupDto.JSON_PROPERTY_TAGS,
  PropertyGroupDto.JSON_PROPERTY_ORGANISATION_TYPE,
  PropertyGroupDto.JSON_PROPERTY_CAN_CREATE_NEW_VERSION,
  PropertyGroupDto.JSON_PROPERTY_CATALOG_INFORMATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class PropertyGroupDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  /**
   * Gets or Sets informationElementStatus
   */
  public enum InformationElementStatusEnum {
    INITIAL("INITIAL"),
    
    PROPOSED("PROPOSED"),
    
    CREATION("CREATION"),
    
    REVIEW("REVIEW"),
    
    VALIDATION("VALIDATION"),
    
    ACCEPTED("ACCEPTED"),
    
    PUBLISHED("PUBLISHED"),
    
    DEPRECATED("DEPRECATED"),
    
    SORTED_OUT("SORTED_OUT"),
    
    REJECTED("REJECTED");

    private String value;

    InformationElementStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InformationElementStatusEnum fromValue(String value) {
      for (InformationElementStatusEnum b : InformationElementStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INFORMATION_ELEMENT_STATUS = "informationElementStatus";
  private InformationElementStatusEnum informationElementStatus;

  public static final String JSON_PROPERTY_DATE_OF_CREATION = "dateOfCreation";
  private OffsetDateTime dateOfCreation;

  public static final String JSON_PROPERTY_DATE_OF_ACTIVATION = "dateOfActivation";
  private OffsetDateTime dateOfActivation;

  public static final String JSON_PROPERTY_DATE_OF_LAST_CHANGE = "dateOfLastChange";
  private OffsetDateTime dateOfLastChange;

  public static final String JSON_PROPERTY_DATE_OF_REVISION = "dateOfRevision";
  private OffsetDateTime dateOfRevision;

  public static final String JSON_PROPERTY_DATE_OF_VERSION = "dateOfVersion";
  private OffsetDateTime dateOfVersion;

  public static final String JSON_PROPERTY_DATE_OF_DEACTIVATION = "dateOfDeactivation";
  private OffsetDateTime dateOfDeactivation;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Long versionNumber;

  public static final String JSON_PROPERTY_REVISION_NUMBER = "revisionNumber";
  private Long revisionNumber;

  public static final String JSON_PROPERTY_REPLACES = "replaces";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> replaces = new ArrayList<>();

  public static final String JSON_PROPERTY_REPLACED_BY = "replacedBy";
  private List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy = new ArrayList<>();

  public static final String JSON_PROPERTY_DEPRECATION_EXPLANATION = "deprecationExplanation";
  private String deprecationExplanation;

  public static final String JSON_PROPERTY_RELATION_OF_THE_PROPERTY_GROUP_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES = "relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries";
  private List<@Valid RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries> relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATORS_LANGUAGE = "creatorsLanguage";
  private CountryLanguageCode creatorsLanguage;

  public static final String JSON_PROPERTY_NAMES_IN_LANGUAGE = "namesInLanguage";
  private List<@Valid NamesInLanguageDto> namesInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE = "definitionsInLanguage";
  private List<@Valid DefinitionsInLanguageDto> definitionsInLanguage = new ArrayList<>();

  public static final String JSON_PROPERTY_VISUAL_REPRESENTATION = "visualRepresentation";
  private List<String> visualRepresentation = new ArrayList<>();

  public static final String JSON_PROPERTY_COUNTRY_OF_USE = "countryOfUse";
  private List<String> countryOfUse = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBDIVISION_OF_USE = "subdivisionOfUse";
  private List<String> subdivisionOfUse = new ArrayList<>();

  public static final String JSON_PROPERTY_COUNTRY_OF_ORIGIN = "countryOfOrigin";
  private String countryOfOrigin;

  public static final String JSON_PROPERTY_CATEGORY_OF_GROUP_OF_PROPERTIES = "categoryOfGroupOfProperties";
  private String categoryOfGroupOfProperties;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private List<@Valid PropertyDto> properties = new ArrayList<>();

  public static final String JSON_PROPERTY_CHILDREN_PROPERTY_GROUPS = "childrenPropertyGroups";
  private List<@Valid PropertyGroupDto> childrenPropertyGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_PARENT_GROUP = "parentGroup";
  private SimpleParentGroup parentGroup;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private BimPortalMetadata metadata;

  public static final String JSON_PROPERTY_BOOKMARKED = "bookmarked";
  private BookmarkStatus bookmarked;

  public static final String JSON_PROPERTY_OBSERVED = "observed";
  private ObservationStatus observed;

  public static final String JSON_PROPERTY_SIMPLE_INHERITED_PROPERTIES = "simpleInheritedProperties";
  private List<@Valid SimpleInheritedPropertyDto> simpleInheritedProperties = new ArrayList<>();

  public static final String JSON_PROPERTY_ORGANISATION_ID = "organisationId";
  private UUID organisationId;

  public static final String JSON_PROPERTY_ORGANISATION_NAME = "organisationName";
  private String organisationName;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<@Valid PropertyGroupTagDto> tags = new ArrayList<>();

  /**
   * Gets or Sets organisationType
   */
  public enum OrganisationTypeEnum {
    SIGNED_IN("SIGNED_IN"),
    
    DEFINED("DEFINED"),
    
    BIM_PORTAL("BIM_PORTAL"),
    
    BUND("BUND");

    private String value;

    OrganisationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrganisationTypeEnum fromValue(String value) {
      for (OrganisationTypeEnum b : OrganisationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORGANISATION_TYPE = "organisationType";
  private OrganisationTypeEnum organisationType;

  public static final String JSON_PROPERTY_CAN_CREATE_NEW_VERSION = "canCreateNewVersion";
  private Boolean canCreateNewVersion;

  public static final String JSON_PROPERTY_CATALOG_INFORMATION = "catalogInformation";
  private PropertyOrGroupCatalogInformation catalogInformation;

  public PropertyGroupDto() {
  }

  public PropertyGroupDto id(UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public PropertyGroupDto guid(UUID guid) {
    
    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   * @return guid
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }


  public PropertyGroupDto informationElementStatus(InformationElementStatusEnum informationElementStatus) {
    
    this.informationElementStatus = informationElementStatus;
    return this;
  }

  /**
   * Get informationElementStatus
   * @return informationElementStatus
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INFORMATION_ELEMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InformationElementStatusEnum getInformationElementStatus() {
    return informationElementStatus;
  }


  @JsonProperty(JSON_PROPERTY_INFORMATION_ELEMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInformationElementStatus(InformationElementStatusEnum informationElementStatus) {
    this.informationElementStatus = informationElementStatus;
  }


  public PropertyGroupDto dateOfCreation(OffsetDateTime dateOfCreation) {
    
    this.dateOfCreation = dateOfCreation;
    return this;
  }

  /**
   * Get dateOfCreation
   * @return dateOfCreation
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfCreation() {
    return dateOfCreation;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_CREATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfCreation(OffsetDateTime dateOfCreation) {
    this.dateOfCreation = dateOfCreation;
  }


  public PropertyGroupDto dateOfActivation(OffsetDateTime dateOfActivation) {
    
    this.dateOfActivation = dateOfActivation;
    return this;
  }

  /**
   * Get dateOfActivation
   * @return dateOfActivation
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfActivation() {
    return dateOfActivation;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfActivation(OffsetDateTime dateOfActivation) {
    this.dateOfActivation = dateOfActivation;
  }


  public PropertyGroupDto dateOfLastChange(OffsetDateTime dateOfLastChange) {
    
    this.dateOfLastChange = dateOfLastChange;
    return this;
  }

  /**
   * Get dateOfLastChange
   * @return dateOfLastChange
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfLastChange() {
    return dateOfLastChange;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfLastChange(OffsetDateTime dateOfLastChange) {
    this.dateOfLastChange = dateOfLastChange;
  }


  public PropertyGroupDto dateOfRevision(OffsetDateTime dateOfRevision) {
    
    this.dateOfRevision = dateOfRevision;
    return this;
  }

  /**
   * Get dateOfRevision
   * @return dateOfRevision
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfRevision() {
    return dateOfRevision;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfRevision(OffsetDateTime dateOfRevision) {
    this.dateOfRevision = dateOfRevision;
  }


  public PropertyGroupDto dateOfVersion(OffsetDateTime dateOfVersion) {
    
    this.dateOfVersion = dateOfVersion;
    return this;
  }

  /**
   * Get dateOfVersion
   * @return dateOfVersion
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfVersion() {
    return dateOfVersion;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfVersion(OffsetDateTime dateOfVersion) {
    this.dateOfVersion = dateOfVersion;
  }


  public PropertyGroupDto dateOfDeactivation(OffsetDateTime dateOfDeactivation) {
    
    this.dateOfDeactivation = dateOfDeactivation;
    return this;
  }

  /**
   * Get dateOfDeactivation
   * @return dateOfDeactivation
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateOfDeactivation() {
    return dateOfDeactivation;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfDeactivation(OffsetDateTime dateOfDeactivation) {
    this.dateOfDeactivation = dateOfDeactivation;
  }


  public PropertyGroupDto versionNumber(Long versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

  /**
   * Get versionNumber
   * @return versionNumber
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVersionNumber() {
    return versionNumber;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionNumber(Long versionNumber) {
    this.versionNumber = versionNumber;
  }


  public PropertyGroupDto revisionNumber(Long revisionNumber) {
    
    this.revisionNumber = revisionNumber;
    return this;
  }

  /**
   * Get revisionNumber
   * @return revisionNumber
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRevisionNumber() {
    return revisionNumber;
  }


  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
  }


  public PropertyGroupDto replaces(List<@Valid PropertyOrGroupWithNamesInLanguage> replaces) {
    
    this.replaces = replaces;
    return this;
  }

  public PropertyGroupDto addReplacesItem(PropertyOrGroupWithNamesInLanguage replacesItem) {
    if (this.replaces == null) {
      this.replaces = new ArrayList<>();
    }
    this.replaces.add(replacesItem);
    return this;
  }

  /**
   * Get replaces
   * @return replaces
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_REPLACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid PropertyOrGroupWithNamesInLanguage> getReplaces() {
    return replaces;
  }


  @JsonProperty(JSON_PROPERTY_REPLACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplaces(List<@Valid PropertyOrGroupWithNamesInLanguage> replaces) {
    this.replaces = replaces;
  }


  public PropertyGroupDto replacedBy(List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy) {
    
    this.replacedBy = replacedBy;
    return this;
  }

  public PropertyGroupDto addReplacedByItem(PropertyOrGroupWithNamesInLanguage replacedByItem) {
    if (this.replacedBy == null) {
      this.replacedBy = new ArrayList<>();
    }
    this.replacedBy.add(replacedByItem);
    return this;
  }

  /**
   * Get replacedBy
   * @return replacedBy
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_REPLACED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid PropertyOrGroupWithNamesInLanguage> getReplacedBy() {
    return replacedBy;
  }


  @JsonProperty(JSON_PROPERTY_REPLACED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplacedBy(List<@Valid PropertyOrGroupWithNamesInLanguage> replacedBy) {
    this.replacedBy = replacedBy;
  }


  public PropertyGroupDto deprecationExplanation(String deprecationExplanation) {
    
    this.deprecationExplanation = deprecationExplanation;
    return this;
  }

  /**
   * Get deprecationExplanation
   * @return deprecationExplanation
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEPRECATION_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeprecationExplanation() {
    return deprecationExplanation;
  }


  @JsonProperty(JSON_PROPERTY_DEPRECATION_EXPLANATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecationExplanation(String deprecationExplanation) {
    this.deprecationExplanation = deprecationExplanation;
  }


  public PropertyGroupDto relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries(List<@Valid RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries> relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries) {
    
    this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries = relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries;
    return this;
  }

  public PropertyGroupDto addRelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionariesItem(RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionariesItem) {
    if (this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries == null) {
      this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries = new ArrayList<>();
    }
    this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries.add(relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionariesItem);
    return this;
  }

  /**
   * Get relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries
   * @return relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_RELATION_OF_THE_PROPERTY_GROUP_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries> getRelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries() {
    return relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries;
  }


  @JsonProperty(JSON_PROPERTY_RELATION_OF_THE_PROPERTY_GROUP_IDENTIFIERS_IN_THE_INTERCONNECTED_DICTIONARIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries(List<@Valid RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries> relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries) {
    this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries = relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries;
  }


  public PropertyGroupDto creatorsLanguage(CountryLanguageCode creatorsLanguage) {
    
    this.creatorsLanguage = creatorsLanguage;
    return this;
  }

  /**
   * Get creatorsLanguage
   * @return creatorsLanguage
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CREATORS_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryLanguageCode getCreatorsLanguage() {
    return creatorsLanguage;
  }


  @JsonProperty(JSON_PROPERTY_CREATORS_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatorsLanguage(CountryLanguageCode creatorsLanguage) {
    this.creatorsLanguage = creatorsLanguage;
  }


  public PropertyGroupDto namesInLanguage(List<@Valid NamesInLanguageDto> namesInLanguage) {
    
    this.namesInLanguage = namesInLanguage;
    return this;
  }

  public PropertyGroupDto addNamesInLanguageItem(NamesInLanguageDto namesInLanguageItem) {
    if (this.namesInLanguage == null) {
      this.namesInLanguage = new ArrayList<>();
    }
    this.namesInLanguage.add(namesInLanguageItem);
    return this;
  }

  /**
   * Get namesInLanguage
   * @return namesInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_NAMES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid NamesInLanguageDto> getNamesInLanguage() {
    return namesInLanguage;
  }


  @JsonProperty(JSON_PROPERTY_NAMES_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamesInLanguage(List<@Valid NamesInLanguageDto> namesInLanguage) {
    this.namesInLanguage = namesInLanguage;
  }


  public PropertyGroupDto definitionsInLanguage(List<@Valid DefinitionsInLanguageDto> definitionsInLanguage) {
    
    this.definitionsInLanguage = definitionsInLanguage;
    return this;
  }

  public PropertyGroupDto addDefinitionsInLanguageItem(DefinitionsInLanguageDto definitionsInLanguageItem) {
    if (this.definitionsInLanguage == null) {
      this.definitionsInLanguage = new ArrayList<>();
    }
    this.definitionsInLanguage.add(definitionsInLanguageItem);
    return this;
  }

  /**
   * Get definitionsInLanguage
   * @return definitionsInLanguage
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid DefinitionsInLanguageDto> getDefinitionsInLanguage() {
    return definitionsInLanguage;
  }


  @JsonProperty(JSON_PROPERTY_DEFINITIONS_IN_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefinitionsInLanguage(List<@Valid DefinitionsInLanguageDto> definitionsInLanguage) {
    this.definitionsInLanguage = definitionsInLanguage;
  }


  public PropertyGroupDto visualRepresentation(List<String> visualRepresentation) {
    
    this.visualRepresentation = visualRepresentation;
    return this;
  }

  public PropertyGroupDto addVisualRepresentationItem(String visualRepresentationItem) {
    if (this.visualRepresentation == null) {
      this.visualRepresentation = new ArrayList<>();
    }
    this.visualRepresentation.add(visualRepresentationItem);
    return this;
  }

  /**
   * Get visualRepresentation
   * @return visualRepresentation
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VISUAL_REPRESENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getVisualRepresentation() {
    return visualRepresentation;
  }


  @JsonProperty(JSON_PROPERTY_VISUAL_REPRESENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisualRepresentation(List<String> visualRepresentation) {
    this.visualRepresentation = visualRepresentation;
  }


  public PropertyGroupDto countryOfUse(List<String> countryOfUse) {
    
    this.countryOfUse = countryOfUse;
    return this;
  }

  public PropertyGroupDto addCountryOfUseItem(String countryOfUseItem) {
    if (this.countryOfUse == null) {
      this.countryOfUse = new ArrayList<>();
    }
    this.countryOfUse.add(countryOfUseItem);
    return this;
  }

  /**
   * Get countryOfUse
   * @return countryOfUse
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCountryOfUse() {
    return countryOfUse;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryOfUse(List<String> countryOfUse) {
    this.countryOfUse = countryOfUse;
  }


  public PropertyGroupDto subdivisionOfUse(List<String> subdivisionOfUse) {
    
    this.subdivisionOfUse = subdivisionOfUse;
    return this;
  }

  public PropertyGroupDto addSubdivisionOfUseItem(String subdivisionOfUseItem) {
    if (this.subdivisionOfUse == null) {
      this.subdivisionOfUse = new ArrayList<>();
    }
    this.subdivisionOfUse.add(subdivisionOfUseItem);
    return this;
  }

  /**
   * Get subdivisionOfUse
   * @return subdivisionOfUse
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SUBDIVISION_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSubdivisionOfUse() {
    return subdivisionOfUse;
  }


  @JsonProperty(JSON_PROPERTY_SUBDIVISION_OF_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubdivisionOfUse(List<String> subdivisionOfUse) {
    this.subdivisionOfUse = subdivisionOfUse;
  }


  public PropertyGroupDto countryOfOrigin(String countryOfOrigin) {
    
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * Get countryOfOrigin
   * @return countryOfOrigin
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_OF_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }


  public PropertyGroupDto categoryOfGroupOfProperties(String categoryOfGroupOfProperties) {
    
    this.categoryOfGroupOfProperties = categoryOfGroupOfProperties;
    return this;
  }

  /**
   * Get categoryOfGroupOfProperties
   * @return categoryOfGroupOfProperties
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CATEGORY_OF_GROUP_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategoryOfGroupOfProperties() {
    return categoryOfGroupOfProperties;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_OF_GROUP_OF_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryOfGroupOfProperties(String categoryOfGroupOfProperties) {
    this.categoryOfGroupOfProperties = categoryOfGroupOfProperties;
  }


  public PropertyGroupDto properties(List<@Valid PropertyDto> properties) {
    
    this.properties = properties;
    return this;
  }

  public PropertyGroupDto addPropertiesItem(PropertyDto propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid PropertyDto> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(List<@Valid PropertyDto> properties) {
    this.properties = properties;
  }


  public PropertyGroupDto childrenPropertyGroups(List<@Valid PropertyGroupDto> childrenPropertyGroups) {
    
    this.childrenPropertyGroups = childrenPropertyGroups;
    return this;
  }

  public PropertyGroupDto addChildrenPropertyGroupsItem(PropertyGroupDto childrenPropertyGroupsItem) {
    if (this.childrenPropertyGroups == null) {
      this.childrenPropertyGroups = new ArrayList<>();
    }
    this.childrenPropertyGroups.add(childrenPropertyGroupsItem);
    return this;
  }

  /**
   * Get childrenPropertyGroups
   * @return childrenPropertyGroups
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CHILDREN_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid PropertyGroupDto> getChildrenPropertyGroups() {
    return childrenPropertyGroups;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildrenPropertyGroups(List<@Valid PropertyGroupDto> childrenPropertyGroups) {
    this.childrenPropertyGroups = childrenPropertyGroups;
  }


  public PropertyGroupDto parentGroup(SimpleParentGroup parentGroup) {
    
    this.parentGroup = parentGroup;
    return this;
  }

  /**
   * Get parentGroup
   * @return parentGroup
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PARENT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimpleParentGroup getParentGroup() {
    return parentGroup;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentGroup(SimpleParentGroup parentGroup) {
    this.parentGroup = parentGroup;
  }


  public PropertyGroupDto metadata(BimPortalMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BimPortalMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(BimPortalMetadata metadata) {
    this.metadata = metadata;
  }


  public PropertyGroupDto bookmarked(BookmarkStatus bookmarked) {
    
    this.bookmarked = bookmarked;
    return this;
  }

  /**
   * Get bookmarked
   * @return bookmarked
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BookmarkStatus getBookmarked() {
    return bookmarked;
  }


  @JsonProperty(JSON_PROPERTY_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookmarked(BookmarkStatus bookmarked) {
    this.bookmarked = bookmarked;
  }


  public PropertyGroupDto observed(ObservationStatus observed) {
    
    this.observed = observed;
    return this;
  }

  /**
   * Get observed
   * @return observed
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_OBSERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ObservationStatus getObserved() {
    return observed;
  }


  @JsonProperty(JSON_PROPERTY_OBSERVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObserved(ObservationStatus observed) {
    this.observed = observed;
  }


  public PropertyGroupDto simpleInheritedProperties(List<@Valid SimpleInheritedPropertyDto> simpleInheritedProperties) {
    
    this.simpleInheritedProperties = simpleInheritedProperties;
    return this;
  }

  public PropertyGroupDto addSimpleInheritedPropertiesItem(SimpleInheritedPropertyDto simpleInheritedPropertiesItem) {
    if (this.simpleInheritedProperties == null) {
      this.simpleInheritedProperties = new ArrayList<>();
    }
    this.simpleInheritedProperties.add(simpleInheritedPropertiesItem);
    return this;
  }

  /**
   * Get simpleInheritedProperties
   * @return simpleInheritedProperties
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SIMPLE_INHERITED_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid SimpleInheritedPropertyDto> getSimpleInheritedProperties() {
    return simpleInheritedProperties;
  }


  @JsonProperty(JSON_PROPERTY_SIMPLE_INHERITED_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimpleInheritedProperties(List<@Valid SimpleInheritedPropertyDto> simpleInheritedProperties) {
    this.simpleInheritedProperties = simpleInheritedProperties;
  }


  public PropertyGroupDto organisationId(UUID organisationId) {
    
    this.organisationId = organisationId;
    return this;
  }

  /**
   * Get organisationId
   * @return organisationId
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getOrganisationId() {
    return organisationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }


  public PropertyGroupDto organisationName(String organisationName) {
    
    this.organisationName = organisationName;
    return this;
  }

  /**
   * Get organisationName
   * @return organisationName
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganisationName() {
    return organisationName;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }


  public PropertyGroupDto tags(List<@Valid PropertyGroupTagDto> tags) {
    
    this.tags = tags;
    return this;
  }

  public PropertyGroupDto addTagsItem(PropertyGroupTagDto tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<@Valid PropertyGroupTagDto> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<@Valid PropertyGroupTagDto> tags) {
    this.tags = tags;
  }


  public PropertyGroupDto organisationType(OrganisationTypeEnum organisationType) {
    
    this.organisationType = organisationType;
    return this;
  }

  /**
   * Get organisationType
   * @return organisationType
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORGANISATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrganisationTypeEnum getOrganisationType() {
    return organisationType;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationType(OrganisationTypeEnum organisationType) {
    this.organisationType = organisationType;
  }


  public PropertyGroupDto canCreateNewVersion(Boolean canCreateNewVersion) {
    
    this.canCreateNewVersion = canCreateNewVersion;
    return this;
  }

  /**
   * Get canCreateNewVersion
   * @return canCreateNewVersion
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanCreateNewVersion() {
    return canCreateNewVersion;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanCreateNewVersion(Boolean canCreateNewVersion) {
    this.canCreateNewVersion = canCreateNewVersion;
  }


  public PropertyGroupDto catalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {
    
    this.catalogInformation = catalogInformation;
    return this;
  }

  /**
   * Get catalogInformation
   * @return catalogInformation
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyOrGroupCatalogInformation getCatalogInformation() {
    return catalogInformation;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {
    this.catalogInformation = catalogInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyGroupDto propertyGroupDto = (PropertyGroupDto) o;
    return Objects.equals(this.id, propertyGroupDto.id) &&
        Objects.equals(this.guid, propertyGroupDto.guid) &&
        Objects.equals(this.informationElementStatus, propertyGroupDto.informationElementStatus) &&
        Objects.equals(this.dateOfCreation, propertyGroupDto.dateOfCreation) &&
        Objects.equals(this.dateOfActivation, propertyGroupDto.dateOfActivation) &&
        Objects.equals(this.dateOfLastChange, propertyGroupDto.dateOfLastChange) &&
        Objects.equals(this.dateOfRevision, propertyGroupDto.dateOfRevision) &&
        Objects.equals(this.dateOfVersion, propertyGroupDto.dateOfVersion) &&
        Objects.equals(this.dateOfDeactivation, propertyGroupDto.dateOfDeactivation) &&
        Objects.equals(this.versionNumber, propertyGroupDto.versionNumber) &&
        Objects.equals(this.revisionNumber, propertyGroupDto.revisionNumber) &&
        Objects.equals(this.replaces, propertyGroupDto.replaces) &&
        Objects.equals(this.replacedBy, propertyGroupDto.replacedBy) &&
        Objects.equals(this.deprecationExplanation, propertyGroupDto.deprecationExplanation) &&
        Objects.equals(this.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries, propertyGroupDto.relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries) &&
        Objects.equals(this.creatorsLanguage, propertyGroupDto.creatorsLanguage) &&
        Objects.equals(this.namesInLanguage, propertyGroupDto.namesInLanguage) &&
        Objects.equals(this.definitionsInLanguage, propertyGroupDto.definitionsInLanguage) &&
        Objects.equals(this.visualRepresentation, propertyGroupDto.visualRepresentation) &&
        Objects.equals(this.countryOfUse, propertyGroupDto.countryOfUse) &&
        Objects.equals(this.subdivisionOfUse, propertyGroupDto.subdivisionOfUse) &&
        Objects.equals(this.countryOfOrigin, propertyGroupDto.countryOfOrigin) &&
        Objects.equals(this.categoryOfGroupOfProperties, propertyGroupDto.categoryOfGroupOfProperties) &&
        Objects.equals(this.properties, propertyGroupDto.properties) &&
        Objects.equals(this.childrenPropertyGroups, propertyGroupDto.childrenPropertyGroups) &&
        Objects.equals(this.parentGroup, propertyGroupDto.parentGroup) &&
        Objects.equals(this.metadata, propertyGroupDto.metadata) &&
        Objects.equals(this.bookmarked, propertyGroupDto.bookmarked) &&
        Objects.equals(this.observed, propertyGroupDto.observed) &&
        Objects.equals(this.simpleInheritedProperties, propertyGroupDto.simpleInheritedProperties) &&
        Objects.equals(this.organisationId, propertyGroupDto.organisationId) &&
        Objects.equals(this.organisationName, propertyGroupDto.organisationName) &&
        Objects.equals(this.tags, propertyGroupDto.tags) &&
        Objects.equals(this.organisationType, propertyGroupDto.organisationType) &&
        Objects.equals(this.canCreateNewVersion, propertyGroupDto.canCreateNewVersion) &&
        Objects.equals(this.catalogInformation, propertyGroupDto.catalogInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, guid, informationElementStatus, dateOfCreation, dateOfActivation, dateOfLastChange, dateOfRevision, dateOfVersion, dateOfDeactivation, versionNumber, revisionNumber, replaces, replacedBy, deprecationExplanation, relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries, creatorsLanguage, namesInLanguage, definitionsInLanguage, visualRepresentation, countryOfUse, subdivisionOfUse, countryOfOrigin, categoryOfGroupOfProperties, properties, childrenPropertyGroups, parentGroup, metadata, bookmarked, observed, simpleInheritedProperties, organisationId, organisationName, tags, organisationType, canCreateNewVersion, catalogInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyGroupDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    informationElementStatus: ").append(toIndentedString(informationElementStatus)).append("\n");
    sb.append("    dateOfCreation: ").append(toIndentedString(dateOfCreation)).append("\n");
    sb.append("    dateOfActivation: ").append(toIndentedString(dateOfActivation)).append("\n");
    sb.append("    dateOfLastChange: ").append(toIndentedString(dateOfLastChange)).append("\n");
    sb.append("    dateOfRevision: ").append(toIndentedString(dateOfRevision)).append("\n");
    sb.append("    dateOfVersion: ").append(toIndentedString(dateOfVersion)).append("\n");
    sb.append("    dateOfDeactivation: ").append(toIndentedString(dateOfDeactivation)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    replaces: ").append(toIndentedString(replaces)).append("\n");
    sb.append("    replacedBy: ").append(toIndentedString(replacedBy)).append("\n");
    sb.append("    deprecationExplanation: ").append(toIndentedString(deprecationExplanation)).append("\n");
    sb.append("    relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries: ").append(toIndentedString(relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries)).append("\n");
    sb.append("    creatorsLanguage: ").append(toIndentedString(creatorsLanguage)).append("\n");
    sb.append("    namesInLanguage: ").append(toIndentedString(namesInLanguage)).append("\n");
    sb.append("    definitionsInLanguage: ").append(toIndentedString(definitionsInLanguage)).append("\n");
    sb.append("    visualRepresentation: ").append(toIndentedString(visualRepresentation)).append("\n");
    sb.append("    countryOfUse: ").append(toIndentedString(countryOfUse)).append("\n");
    sb.append("    subdivisionOfUse: ").append(toIndentedString(subdivisionOfUse)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    categoryOfGroupOfProperties: ").append(toIndentedString(categoryOfGroupOfProperties)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    childrenPropertyGroups: ").append(toIndentedString(childrenPropertyGroups)).append("\n");
    sb.append("    parentGroup: ").append(toIndentedString(parentGroup)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    bookmarked: ").append(toIndentedString(bookmarked)).append("\n");
    sb.append("    observed: ").append(toIndentedString(observed)).append("\n");
    sb.append("    simpleInheritedProperties: ").append(toIndentedString(simpleInheritedProperties)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    organisationType: ").append(toIndentedString(organisationType)).append("\n");
    sb.append("    canCreateNewVersion: ").append(toIndentedString(canCreateNewVersion)).append("\n");
    sb.append("    catalogInformation: ").append(toIndentedString(catalogInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

