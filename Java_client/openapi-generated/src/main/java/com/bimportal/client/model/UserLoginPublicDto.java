/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import java.util.Objects;
import org.hibernate.validator.constraints.*;

/** UserLoginPublicDto */
@JsonPropertyOrder({
  UserLoginPublicDto.JSON_PROPERTY_MAIL,
  UserLoginPublicDto.JSON_PROPERTY_PASSWORD
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class UserLoginPublicDto {
  public static final String JSON_PROPERTY_MAIL = "mail";
  private String mail;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public UserLoginPublicDto() {}

  public UserLoginPublicDto mail(String mail) {

    this.mail = mail;
    return this;
  }

  /**
   * Get mail
   *
   * @return mail
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Size(min = 1)
  @JsonProperty(JSON_PROPERTY_MAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getMail() {
    return mail;
  }

  @JsonProperty(JSON_PROPERTY_MAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMail(String mail) {
    this.mail = mail;
  }

  public UserLoginPublicDto password(String password) {

    this.password = password;
    return this;
  }

  /**
   * Get password
   *
   * @return password
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Size(min = 1)
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPassword() {
    return password;
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserLoginPublicDto userLoginPublicDto = (UserLoginPublicDto) o;
    return Objects.equals(this.mail, userLoginPublicDto.mail)
        && Objects.equals(this.password, userLoginPublicDto.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mail, password);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserLoginPublicDto {\n");
    sb.append("    mail: ").append(toIndentedString(mail)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
