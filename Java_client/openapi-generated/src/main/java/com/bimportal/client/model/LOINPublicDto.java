/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import java.util.UUID;
import org.hibernate.validator.constraints.*;

/** LOINPublicDto */
@JsonPropertyOrder({
  LOINPublicDto.JSON_PROPERTY_ID,
  LOINPublicDto.JSON_PROPERTY_CREATED_DATE,
  LOINPublicDto.JSON_PROPERTY_DATE_OF_ACTIVATION,
  LOINPublicDto.JSON_PROPERTY_DATE_OF_LAST_CHANGE,
  LOINPublicDto.JSON_PROPERTY_DATE_OF_REVISION,
  LOINPublicDto.JSON_PROPERTY_DATE_OF_VERSION,
  LOINPublicDto.JSON_PROPERTY_DATE_OF_DEACTIVATION,
  LOINPublicDto.JSON_PROPERTY_GUID,
  LOINPublicDto.JSON_PROPERTY_NAME,
  LOINPublicDto.JSON_PROPERTY_DESCRIPTION,
  LOINPublicDto.JSON_PROPERTY_ORGANISATION_ID,
  LOINPublicDto.JSON_PROPERTY_ORGANISATION_NAME,
  LOINPublicDto.JSON_PROPERTY_VERSION_NUMBER,
  LOINPublicDto.JSON_PROPERTY_REVISION_NUMBER,
  LOINPublicDto.JSON_PROPERTY_BUILD_NUMBER,
  LOINPublicDto.JSON_PROPERTY_EXPORT_FORMATS,
  LOINPublicDto.JSON_PROPERTY_FILTERS,
  LOINPublicDto.JSON_PROPERTY_OBJECT_TYPES,
  LOINPublicDto.JSON_PROPERTY_DATA_FORMATS,
  LOINPublicDto.JSON_PROPERTY_PROPERTIES,
  LOINPublicDto.JSON_PROPERTY_LEVEL_OF_DETAIL,
  LOINPublicDto.JSON_PROPERTY_DIMENSIONALITY,
  LOINPublicDto.JSON_PROPERTY_LOCATION,
  LOINPublicDto.JSON_PROPERTY_APPEARANCE,
  LOINPublicDto.JSON_PROPERTY_BEHAVIOUR,
  LOINPublicDto.JSON_PROPERTY_GEOMETRIC_COMMENT,
  LOINPublicDto.JSON_PROPERTY_DOCUMENTATIONS,
  LOINPublicDto.JSON_PROPERTY_FALLBACK_PROPERTY_GROUP_NAME,
  LOINPublicDto.JSON_PROPERTY_CLASSIFICATIONS,
  LOINPublicDto.JSON_PROPERTY_CONTEXTS
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class LOINPublicDto {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_DATE_OF_ACTIVATION = "dateOfActivation";
  private OffsetDateTime dateOfActivation;

  public static final String JSON_PROPERTY_DATE_OF_LAST_CHANGE = "dateOfLastChange";
  private OffsetDateTime dateOfLastChange;

  public static final String JSON_PROPERTY_DATE_OF_REVISION = "dateOfRevision";
  private OffsetDateTime dateOfRevision;

  public static final String JSON_PROPERTY_DATE_OF_VERSION = "dateOfVersion";
  private OffsetDateTime dateOfVersion;

  public static final String JSON_PROPERTY_DATE_OF_DEACTIVATION = "dateOfDeactivation";
  private OffsetDateTime dateOfDeactivation;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ORGANISATION_ID = "organisationId";
  private UUID organisationId;

  public static final String JSON_PROPERTY_ORGANISATION_NAME = "organisationName";
  private String organisationName;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Long versionNumber;

  public static final String JSON_PROPERTY_REVISION_NUMBER = "revisionNumber";
  private Long revisionNumber;

  public static final String JSON_PROPERTY_BUILD_NUMBER = "buildNumber";
  private Long buildNumber;

  public static final String JSON_PROPERTY_EXPORT_FORMATS = "exportFormats";
  private Set<String> exportFormats = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_FILTERS = "filters";
  private Set<@Valid FilterAssignmentDto> filters = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_OBJECT_TYPES = "objectTypes";
  private Set<@Valid PropertyOrGroupPublicReference> objectTypes = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_DATA_FORMATS = "dataFormats";
  private Set<LOINPublicDtoDataFormatsInner> dataFormats = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private Set<@Valid PropertyOrGroupPublicReference> properties = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_LEVEL_OF_DETAIL = "levelOfDetail";
  private String levelOfDetail;

  public static final String JSON_PROPERTY_DIMENSIONALITY = "dimensionality";
  private String dimensionality;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private String location;

  public static final String JSON_PROPERTY_APPEARANCE = "appearance";
  private String appearance;

  public static final String JSON_PROPERTY_BEHAVIOUR = "behaviour";
  private String behaviour;

  public static final String JSON_PROPERTY_GEOMETRIC_COMMENT = "geometricComment";
  private String geometricComment;

  public static final String JSON_PROPERTY_DOCUMENTATIONS = "documentations";
  private List<@Valid DocumentationDto> documentations = new ArrayList<>();

  public static final String JSON_PROPERTY_FALLBACK_PROPERTY_GROUP_NAME =
      "fallbackPropertyGroupName";
  private String fallbackPropertyGroupName;

  public static final String JSON_PROPERTY_CLASSIFICATIONS = "classifications";
  private List<@Valid ClassificationPublicDto> classifications = new ArrayList<>();

  public static final String JSON_PROPERTY_CONTEXTS = "contexts";
  private Set<@Valid ContextInfoPublicReference> contexts = new LinkedHashSet<>();

  public LOINPublicDto() {}

  public LOINPublicDto id(UUID id) {

    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }

  public LOINPublicDto createdDate(OffsetDateTime createdDate) {

    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   *
   * @return createdDate
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public LOINPublicDto dateOfActivation(OffsetDateTime dateOfActivation) {

    this.dateOfActivation = dateOfActivation;
    return this;
  }

  /**
   * Get dateOfActivation
   *
   * @return dateOfActivation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfActivation() {
    return dateOfActivation;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_ACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfActivation(OffsetDateTime dateOfActivation) {
    this.dateOfActivation = dateOfActivation;
  }

  public LOINPublicDto dateOfLastChange(OffsetDateTime dateOfLastChange) {

    this.dateOfLastChange = dateOfLastChange;
    return this;
  }

  /**
   * Get dateOfLastChange
   *
   * @return dateOfLastChange
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfLastChange() {
    return dateOfLastChange;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_LAST_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfLastChange(OffsetDateTime dateOfLastChange) {
    this.dateOfLastChange = dateOfLastChange;
  }

  public LOINPublicDto dateOfRevision(OffsetDateTime dateOfRevision) {

    this.dateOfRevision = dateOfRevision;
    return this;
  }

  /**
   * Get dateOfRevision
   *
   * @return dateOfRevision
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfRevision() {
    return dateOfRevision;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_REVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfRevision(OffsetDateTime dateOfRevision) {
    this.dateOfRevision = dateOfRevision;
  }

  public LOINPublicDto dateOfVersion(OffsetDateTime dateOfVersion) {

    this.dateOfVersion = dateOfVersion;
    return this;
  }

  /**
   * Get dateOfVersion
   *
   * @return dateOfVersion
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfVersion() {
    return dateOfVersion;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfVersion(OffsetDateTime dateOfVersion) {
    this.dateOfVersion = dateOfVersion;
  }

  public LOINPublicDto dateOfDeactivation(OffsetDateTime dateOfDeactivation) {

    this.dateOfDeactivation = dateOfDeactivation;
    return this;
  }

  /**
   * Get dateOfDeactivation
   *
   * @return dateOfDeactivation
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateOfDeactivation() {
    return dateOfDeactivation;
  }

  @JsonProperty(JSON_PROPERTY_DATE_OF_DEACTIVATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfDeactivation(OffsetDateTime dateOfDeactivation) {
    this.dateOfDeactivation = dateOfDeactivation;
  }

  public LOINPublicDto guid(UUID guid) {

    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   *
   * @return guid
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getGuid() {
    return guid;
  }

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }

  public LOINPublicDto name(String name) {

    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public LOINPublicDto description(String description) {

    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }

  public LOINPublicDto organisationId(UUID organisationId) {

    this.organisationId = organisationId;
    return this;
  }

  /**
   * Get organisationId
   *
   * @return organisationId
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getOrganisationId() {
    return organisationId;
  }

  @JsonProperty(JSON_PROPERTY_ORGANISATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationId(UUID organisationId) {
    this.organisationId = organisationId;
  }

  public LOINPublicDto organisationName(String organisationName) {

    this.organisationName = organisationName;
    return this;
  }

  /**
   * Get organisationName
   *
   * @return organisationName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrganisationName() {
    return organisationName;
  }

  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }

  public LOINPublicDto versionNumber(Long versionNumber) {

    this.versionNumber = versionNumber;
    return this;
  }

  /**
   * Get versionNumber
   *
   * @return versionNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getVersionNumber() {
    return versionNumber;
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionNumber(Long versionNumber) {
    this.versionNumber = versionNumber;
  }

  public LOINPublicDto revisionNumber(Long revisionNumber) {

    this.revisionNumber = revisionNumber;
    return this;
  }

  /**
   * Get revisionNumber
   *
   * @return revisionNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getRevisionNumber() {
    return revisionNumber;
  }

  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
  }

  public LOINPublicDto buildNumber(Long buildNumber) {

    this.buildNumber = buildNumber;
    return this;
  }

  /**
   * Get buildNumber
   *
   * @return buildNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getBuildNumber() {
    return buildNumber;
  }

  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildNumber(Long buildNumber) {
    this.buildNumber = buildNumber;
  }

  public LOINPublicDto exportFormats(Set<String> exportFormats) {

    this.exportFormats = exportFormats;
    return this;
  }

  public LOINPublicDto addExportFormatsItem(String exportFormatsItem) {
    if (this.exportFormats == null) {
      this.exportFormats = new LinkedHashSet<>();
    }
    this.exportFormats.add(exportFormatsItem);
    return this;
  }

  /**
   * Get exportFormats
   *
   * @return exportFormats
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPORT_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<String> getExportFormats() {
    return exportFormats;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXPORT_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExportFormats(Set<String> exportFormats) {
    this.exportFormats = exportFormats;
  }

  public LOINPublicDto filters(Set<@Valid FilterAssignmentDto> filters) {

    this.filters = filters;
    return this;
  }

  public LOINPublicDto addFiltersItem(FilterAssignmentDto filtersItem) {
    if (this.filters == null) {
      this.filters = new LinkedHashSet<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

  /**
   * Get filters
   *
   * @return filters
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<@Valid FilterAssignmentDto> getFilters() {
    return filters;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilters(Set<@Valid FilterAssignmentDto> filters) {
    this.filters = filters;
  }

  public LOINPublicDto objectTypes(Set<@Valid PropertyOrGroupPublicReference> objectTypes) {

    this.objectTypes = objectTypes;
    return this;
  }

  public LOINPublicDto addObjectTypesItem(PropertyOrGroupPublicReference objectTypesItem) {
    if (this.objectTypes == null) {
      this.objectTypes = new LinkedHashSet<>();
    }
    this.objectTypes.add(objectTypesItem);
    return this;
  }

  /**
   * Get objectTypes
   *
   * @return objectTypes
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_OBJECT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<@Valid PropertyOrGroupPublicReference> getObjectTypes() {
    return objectTypes;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_OBJECT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectTypes(Set<@Valid PropertyOrGroupPublicReference> objectTypes) {
    this.objectTypes = objectTypes;
  }

  public LOINPublicDto dataFormats(Set<LOINPublicDtoDataFormatsInner> dataFormats) {

    this.dataFormats = dataFormats;
    return this;
  }

  public LOINPublicDto addDataFormatsItem(LOINPublicDtoDataFormatsInner dataFormatsItem) {
    if (this.dataFormats == null) {
      this.dataFormats = new LinkedHashSet<>();
    }
    this.dataFormats.add(dataFormatsItem);
    return this;
  }

  /**
   * Get dataFormats
   *
   * @return dataFormats
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DATA_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<LOINPublicDtoDataFormatsInner> getDataFormats() {
    return dataFormats;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_DATA_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataFormats(Set<LOINPublicDtoDataFormatsInner> dataFormats) {
    this.dataFormats = dataFormats;
  }

  public LOINPublicDto properties(Set<@Valid PropertyOrGroupPublicReference> properties) {

    this.properties = properties;
    return this;
  }

  public LOINPublicDto addPropertiesItem(PropertyOrGroupPublicReference propertiesItem) {
    if (this.properties == null) {
      this.properties = new LinkedHashSet<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * Get properties
   *
   * @return properties
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<@Valid PropertyOrGroupPublicReference> getProperties() {
    return properties;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(Set<@Valid PropertyOrGroupPublicReference> properties) {
    this.properties = properties;
  }

  public LOINPublicDto levelOfDetail(String levelOfDetail) {

    this.levelOfDetail = levelOfDetail;
    return this;
  }

  /**
   * Get levelOfDetail
   *
   * @return levelOfDetail
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEVEL_OF_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLevelOfDetail() {
    return levelOfDetail;
  }

  @JsonProperty(JSON_PROPERTY_LEVEL_OF_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevelOfDetail(String levelOfDetail) {
    this.levelOfDetail = levelOfDetail;
  }

  public LOINPublicDto dimensionality(String dimensionality) {

    this.dimensionality = dimensionality;
    return this;
  }

  /**
   * Get dimensionality
   *
   * @return dimensionality
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIMENSIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDimensionality() {
    return dimensionality;
  }

  @JsonProperty(JSON_PROPERTY_DIMENSIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensionality(String dimensionality) {
    this.dimensionality = dimensionality;
  }

  public LOINPublicDto location(String location) {

    this.location = location;
    return this;
  }

  /**
   * Get location
   *
   * @return location
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLocation() {
    return location;
  }

  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(String location) {
    this.location = location;
  }

  public LOINPublicDto appearance(String appearance) {

    this.appearance = appearance;
    return this;
  }

  /**
   * Get appearance
   *
   * @return appearance
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPEARANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAppearance() {
    return appearance;
  }

  @JsonProperty(JSON_PROPERTY_APPEARANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppearance(String appearance) {
    this.appearance = appearance;
  }

  public LOINPublicDto behaviour(String behaviour) {

    this.behaviour = behaviour;
    return this;
  }

  /**
   * Get behaviour
   *
   * @return behaviour
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEHAVIOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBehaviour() {
    return behaviour;
  }

  @JsonProperty(JSON_PROPERTY_BEHAVIOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBehaviour(String behaviour) {
    this.behaviour = behaviour;
  }

  public LOINPublicDto geometricComment(String geometricComment) {

    this.geometricComment = geometricComment;
    return this;
  }

  /**
   * Get geometricComment
   *
   * @return geometricComment
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRIC_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGeometricComment() {
    return geometricComment;
  }

  @JsonProperty(JSON_PROPERTY_GEOMETRIC_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometricComment(String geometricComment) {
    this.geometricComment = geometricComment;
  }

  public LOINPublicDto documentations(List<@Valid DocumentationDto> documentations) {

    this.documentations = documentations;
    return this;
  }

  public LOINPublicDto addDocumentationsItem(DocumentationDto documentationsItem) {
    if (this.documentations == null) {
      this.documentations = new ArrayList<>();
    }
    this.documentations.add(documentationsItem);
    return this;
  }

  /**
   * Get documentations
   *
   * @return documentations
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_DOCUMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DocumentationDto> getDocumentations() {
    return documentations;
  }

  @JsonProperty(JSON_PROPERTY_DOCUMENTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentations(List<@Valid DocumentationDto> documentations) {
    this.documentations = documentations;
  }

  public LOINPublicDto fallbackPropertyGroupName(String fallbackPropertyGroupName) {

    this.fallbackPropertyGroupName = fallbackPropertyGroupName;
    return this;
  }

  /**
   * Get fallbackPropertyGroupName
   *
   * @return fallbackPropertyGroupName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FALLBACK_PROPERTY_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFallbackPropertyGroupName() {
    return fallbackPropertyGroupName;
  }

  @JsonProperty(JSON_PROPERTY_FALLBACK_PROPERTY_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackPropertyGroupName(String fallbackPropertyGroupName) {
    this.fallbackPropertyGroupName = fallbackPropertyGroupName;
  }

  public LOINPublicDto classifications(List<@Valid ClassificationPublicDto> classifications) {

    this.classifications = classifications;
    return this;
  }

  public LOINPublicDto addClassificationsItem(ClassificationPublicDto classificationsItem) {
    if (this.classifications == null) {
      this.classifications = new ArrayList<>();
    }
    this.classifications.add(classificationsItem);
    return this;
  }

  /**
   * Get classifications
   *
   * @return classifications
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CLASSIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid ClassificationPublicDto> getClassifications() {
    return classifications;
  }

  @JsonProperty(JSON_PROPERTY_CLASSIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassifications(List<@Valid ClassificationPublicDto> classifications) {
    this.classifications = classifications;
  }

  public LOINPublicDto contexts(Set<@Valid ContextInfoPublicReference> contexts) {

    this.contexts = contexts;
    return this;
  }

  public LOINPublicDto addContextsItem(ContextInfoPublicReference contextsItem) {
    if (this.contexts == null) {
      this.contexts = new LinkedHashSet<>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

  /**
   * Get contexts
   *
   * @return contexts
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_CONTEXTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<@Valid ContextInfoPublicReference> getContexts() {
    return contexts;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_CONTEXTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContexts(Set<@Valid ContextInfoPublicReference> contexts) {
    this.contexts = contexts;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LOINPublicDto loINPublicDto = (LOINPublicDto) o;
    return Objects.equals(this.id, loINPublicDto.id)
        && Objects.equals(this.createdDate, loINPublicDto.createdDate)
        && Objects.equals(this.dateOfActivation, loINPublicDto.dateOfActivation)
        && Objects.equals(this.dateOfLastChange, loINPublicDto.dateOfLastChange)
        && Objects.equals(this.dateOfRevision, loINPublicDto.dateOfRevision)
        && Objects.equals(this.dateOfVersion, loINPublicDto.dateOfVersion)
        && Objects.equals(this.dateOfDeactivation, loINPublicDto.dateOfDeactivation)
        && Objects.equals(this.guid, loINPublicDto.guid)
        && Objects.equals(this.name, loINPublicDto.name)
        && Objects.equals(this.description, loINPublicDto.description)
        && Objects.equals(this.organisationId, loINPublicDto.organisationId)
        && Objects.equals(this.organisationName, loINPublicDto.organisationName)
        && Objects.equals(this.versionNumber, loINPublicDto.versionNumber)
        && Objects.equals(this.revisionNumber, loINPublicDto.revisionNumber)
        && Objects.equals(this.buildNumber, loINPublicDto.buildNumber)
        && Objects.equals(this.exportFormats, loINPublicDto.exportFormats)
        && Objects.equals(this.filters, loINPublicDto.filters)
        && Objects.equals(this.objectTypes, loINPublicDto.objectTypes)
        && Objects.equals(this.dataFormats, loINPublicDto.dataFormats)
        && Objects.equals(this.properties, loINPublicDto.properties)
        && Objects.equals(this.levelOfDetail, loINPublicDto.levelOfDetail)
        && Objects.equals(this.dimensionality, loINPublicDto.dimensionality)
        && Objects.equals(this.location, loINPublicDto.location)
        && Objects.equals(this.appearance, loINPublicDto.appearance)
        && Objects.equals(this.behaviour, loINPublicDto.behaviour)
        && Objects.equals(this.geometricComment, loINPublicDto.geometricComment)
        && Objects.equals(this.documentations, loINPublicDto.documentations)
        && Objects.equals(this.fallbackPropertyGroupName, loINPublicDto.fallbackPropertyGroupName)
        && Objects.equals(this.classifications, loINPublicDto.classifications)
        && Objects.equals(this.contexts, loINPublicDto.contexts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        id,
        createdDate,
        dateOfActivation,
        dateOfLastChange,
        dateOfRevision,
        dateOfVersion,
        dateOfDeactivation,
        guid,
        name,
        description,
        organisationId,
        organisationName,
        versionNumber,
        revisionNumber,
        buildNumber,
        exportFormats,
        filters,
        objectTypes,
        dataFormats,
        properties,
        levelOfDetail,
        dimensionality,
        location,
        appearance,
        behaviour,
        geometricComment,
        documentations,
        fallbackPropertyGroupName,
        classifications,
        contexts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LOINPublicDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    dateOfActivation: ").append(toIndentedString(dateOfActivation)).append("\n");
    sb.append("    dateOfLastChange: ").append(toIndentedString(dateOfLastChange)).append("\n");
    sb.append("    dateOfRevision: ").append(toIndentedString(dateOfRevision)).append("\n");
    sb.append("    dateOfVersion: ").append(toIndentedString(dateOfVersion)).append("\n");
    sb.append("    dateOfDeactivation: ").append(toIndentedString(dateOfDeactivation)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    exportFormats: ").append(toIndentedString(exportFormats)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    objectTypes: ").append(toIndentedString(objectTypes)).append("\n");
    sb.append("    dataFormats: ").append(toIndentedString(dataFormats)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    levelOfDetail: ").append(toIndentedString(levelOfDetail)).append("\n");
    sb.append("    dimensionality: ").append(toIndentedString(dimensionality)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    appearance: ").append(toIndentedString(appearance)).append("\n");
    sb.append("    behaviour: ").append(toIndentedString(behaviour)).append("\n");
    sb.append("    geometricComment: ").append(toIndentedString(geometricComment)).append("\n");
    sb.append("    documentations: ").append(toIndentedString(documentations)).append("\n");
    sb.append("    fallbackPropertyGroupName: ")
        .append(toIndentedString(fallbackPropertyGroupName))
        .append("\n");
    sb.append("    classifications: ").append(toIndentedString(classifications)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
