/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import java.util.UUID;
import org.hibernate.validator.constraints.*;

/** PropertyOrGroupForPublicRequest */
@JsonPropertyOrder({
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_ORGANISATION_GUIDS,
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_SEARCH_STRING,
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_FILTER_GUIDS,
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_PARENT_GUID,
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_INCLUDE_DEPRECATED,
  PropertyOrGroupForPublicRequest.JSON_PROPERTY_PAGE_NUMBER
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]",
    comments = "Generator version: 7.9.0")
public class PropertyOrGroupForPublicRequest {
  public static final String JSON_PROPERTY_ORGANISATION_GUIDS = "organisationGuids";
  private Set<UUID> organisationGuids = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SEARCH_STRING = "searchString";
  private String searchString;

  public static final String JSON_PROPERTY_FILTER_GUIDS = "filterGuids";
  private List<UUID> filterGuids = new ArrayList<>();

  public static final String JSON_PROPERTY_PARENT_GUID = "parentGuid";
  private UUID parentGuid;

  public static final String JSON_PROPERTY_INCLUDE_DEPRECATED = "includeDeprecated";
  private Boolean includeDeprecated;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  private Integer pageNumber;

  public PropertyOrGroupForPublicRequest() {}

  public PropertyOrGroupForPublicRequest organisationGuids(Set<UUID> organisationGuids) {

    this.organisationGuids = organisationGuids;
    return this;
  }

  public PropertyOrGroupForPublicRequest addOrganisationGuidsItem(UUID organisationGuidsItem) {
    if (this.organisationGuids == null) {
      this.organisationGuids = new LinkedHashSet<>();
    }
    this.organisationGuids.add(organisationGuidsItem);
    return this;
  }

  /**
   * GUIDs der Organisationen, denen die Merkmale oder Gruppen angehören müssen
   *
   * @return organisationGuids
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Set<UUID> getOrganisationGuids() {
    return organisationGuids;
  }

  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationGuids(Set<UUID> organisationGuids) {
    this.organisationGuids = organisationGuids;
  }

  public PropertyOrGroupForPublicRequest searchString(String searchString) {

    this.searchString = searchString;
    return this;
  }

  /**
   * Teilstring, den die Namen der zu liefernden Merkmale und Gruppen beinhalten müssen
   *
   * @return searchString
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchString() {
    return searchString;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }

  public PropertyOrGroupForPublicRequest filterGuids(List<UUID> filterGuids) {

    this.filterGuids = filterGuids;
    return this;
  }

  public PropertyOrGroupForPublicRequest addFilterGuidsItem(UUID filterGuidsItem) {
    if (this.filterGuids == null) {
      this.filterGuids = new ArrayList<>();
    }
    this.filterGuids.add(filterGuidsItem);
    return this;
  }

  /**
   * GUIDs der Filter, die die zu liefernden Merkmale und Gruppen besitzen müssen
   *
   * @return filterGuids
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_FILTER_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getFilterGuids() {
    return filterGuids;
  }

  @JsonProperty(JSON_PROPERTY_FILTER_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterGuids(List<UUID> filterGuids) {
    this.filterGuids = filterGuids;
  }

  public PropertyOrGroupForPublicRequest parentGuid(UUID parentGuid) {

    this.parentGuid = parentGuid;
    return this;
  }

  /**
   * GUID der Gruppe, in der die zu liefernden Merkmale und Gruppen enthalten sein müssen
   *
   * @return parentGuid
   */
  @jakarta.annotation.Nullable
  @Valid
  @JsonProperty(JSON_PROPERTY_PARENT_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getParentGuid() {
    return parentGuid;
  }

  @JsonProperty(JSON_PROPERTY_PARENT_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentGuid(UUID parentGuid) {
    this.parentGuid = parentGuid;
  }

  public PropertyOrGroupForPublicRequest includeDeprecated(Boolean includeDeprecated) {

    this.includeDeprecated = includeDeprecated;
    return this;
  }

  /**
   * true, wenn auch veraltete Merkmale und Gruppen mitgeliefert werden sollen
   *
   * @return includeDeprecated
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIncludeDeprecated() {
    return includeDeprecated;
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeDeprecated(Boolean includeDeprecated) {
    this.includeDeprecated = includeDeprecated;
  }

  public PropertyOrGroupForPublicRequest pageNumber(Integer pageNumber) {

    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Laufende Nummer der Ergebnisseite
   *
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageNumber() {
    return pageNumber;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyOrGroupForPublicRequest propertyOrGroupForPublicRequest =
        (PropertyOrGroupForPublicRequest) o;
    return Objects.equals(this.organisationGuids, propertyOrGroupForPublicRequest.organisationGuids)
        && Objects.equals(this.searchString, propertyOrGroupForPublicRequest.searchString)
        && Objects.equals(this.filterGuids, propertyOrGroupForPublicRequest.filterGuids)
        && Objects.equals(this.parentGuid, propertyOrGroupForPublicRequest.parentGuid)
        && Objects.equals(this.includeDeprecated, propertyOrGroupForPublicRequest.includeDeprecated)
        && Objects.equals(this.pageNumber, propertyOrGroupForPublicRequest.pageNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        organisationGuids, searchString, filterGuids, parentGuid, includeDeprecated, pageNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyOrGroupForPublicRequest {\n");
    sb.append("    organisationGuids: ").append(toIndentedString(organisationGuids)).append("\n");
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    filterGuids: ").append(toIndentedString(filterGuids)).append("\n");
    sb.append("    parentGuid: ").append(toIndentedString(parentGuid)).append("\n");
    sb.append("    includeDeprecated: ").append(toIndentedString(includeDeprecated)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
