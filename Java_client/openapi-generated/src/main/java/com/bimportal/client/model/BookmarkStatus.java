/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * BookmarkStatus
 */
@JsonPropertyOrder({
  BookmarkStatus.JSON_PROPERTY_BOOKMARK_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class BookmarkStatus {
  public static final String JSON_PROPERTY_BOOKMARK_ID = "bookmarkId";
  private UUID bookmarkId;

  public BookmarkStatus() {
  }

  public BookmarkStatus bookmarkId(UUID bookmarkId) {
    
    this.bookmarkId = bookmarkId;
    return this;
  }

  /**
   * Get bookmarkId
   * @return bookmarkId
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_BOOKMARK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getBookmarkId() {
    return bookmarkId;
  }


  @JsonProperty(JSON_PROPERTY_BOOKMARK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookmarkId(UUID bookmarkId) {
    this.bookmarkId = bookmarkId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookmarkStatus bookmarkStatus = (BookmarkStatus) o;
    return Objects.equals(this.bookmarkId, bookmarkStatus.bookmarkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookmarkId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookmarkStatus {\n");
    sb.append("    bookmarkId: ").append(toIndentedString(bookmarkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

