/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bimportal.client;

import com.bimportal.client.model.ApiResponse;
import com.fasterxml.jackson.databind.ObjectMapper;
import feign.Response;
import feign.Types;
import feign.jackson.JacksonDecoder;
import java.io.IOException;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.Collection;
import java.util.Collections;
import java.util.Map;

public class ApiResponseDecoder extends JacksonDecoder {

  public ApiResponseDecoder(ObjectMapper mapper) {
    super(mapper);
  }

  @Override
  public Object decode(Response response, Type type) throws IOException {
    // Detects if the type is an instance of the parameterized class ApiResponse
    if (type instanceof ParameterizedType
        && Types.getRawType(type).isAssignableFrom(ApiResponse.class)) {
      // The ApiResponse class has a single type parameter, the Dto class itself
      Type responseBodyType = ((ParameterizedType) type).getActualTypeArguments()[0];
      Object body = super.decode(response, responseBodyType);
      Map<String, Collection<String>> responseHeaders =
          Collections.unmodifiableMap(response.headers());
      return new ApiResponse<>(response.status(), responseHeaders, body);
    } else {
      // The response is not encapsulated in the ApiResponse, decode the Dto as normal
      return super.decode(response, type);
    }
  }
}
