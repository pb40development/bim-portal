/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * SimpleAiaProjectPublicDto
 */
@JsonPropertyOrder({
  SimpleAiaProjectPublicDto.JSON_PROPERTY_NAME,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_DESCRIPTION,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_ID,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_GUID,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_VERSION,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_ORGANISATION,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_VISIBILITY,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_CONSTRUCTION_TYPES,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_PROJECT_PHASES,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_PURPOSES,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_ACTORS,
  SimpleAiaProjectPublicDto.JSON_PROPERTY_DOMAIN_SPECIFIC_MODEL_TYPES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class SimpleAiaProjectPublicDto {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_ORGANISATION = "organisation";
  private String organisation;

  /**
   * Gets or Sets visibility
   */
  public enum VisibilityEnum {
    PUBLIC("PUBLIC"),
    
    SECURED("SECURED"),
    
    CHILD("CHILD"),
    
    PRIVATE("PRIVATE");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VISIBILITY = "visibility";
  private VisibilityEnum visibility;

  public static final String JSON_PROPERTY_CONSTRUCTION_TYPES = "constructionTypes";
  private List<String> constructionTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_PROJECT_PHASES = "projectPhases";
  private List<String> projectPhases = new ArrayList<>();

  public static final String JSON_PROPERTY_PURPOSES = "purposes";
  private List<String> purposes = new ArrayList<>();

  public static final String JSON_PROPERTY_ACTORS = "actors";
  private List<String> actors = new ArrayList<>();

  public static final String JSON_PROPERTY_DOMAIN_SPECIFIC_MODEL_TYPES = "domainSpecificModelTypes";
  private List<String> domainSpecificModelTypes = new ArrayList<>();

  public SimpleAiaProjectPublicDto() {
  }

  public SimpleAiaProjectPublicDto name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SimpleAiaProjectPublicDto description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SimpleAiaProjectPublicDto id(UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public SimpleAiaProjectPublicDto guid(UUID guid) {
    
    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   * @return guid
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }


  public SimpleAiaProjectPublicDto version(String version) {
    
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public SimpleAiaProjectPublicDto organisation(String organisation) {
    
    this.organisation = organisation;
    return this;
  }

  /**
   * Get organisation
   * @return organisation
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORGANISATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganisation() {
    return organisation;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisation(String organisation) {
    this.organisation = organisation;
  }


  public SimpleAiaProjectPublicDto visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

  /**
   * Get visibility
   * @return visibility
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @JsonProperty(JSON_PROPERTY_VISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public SimpleAiaProjectPublicDto constructionTypes(List<String> constructionTypes) {
    
    this.constructionTypes = constructionTypes;
    return this;
  }

  public SimpleAiaProjectPublicDto addConstructionTypesItem(String constructionTypesItem) {
    if (this.constructionTypes == null) {
      this.constructionTypes = new ArrayList<>();
    }
    this.constructionTypes.add(constructionTypesItem);
    return this;
  }

  /**
   * Get constructionTypes
   * @return constructionTypes
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONSTRUCTION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getConstructionTypes() {
    return constructionTypes;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRUCTION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstructionTypes(List<String> constructionTypes) {
    this.constructionTypes = constructionTypes;
  }


  public SimpleAiaProjectPublicDto projectPhases(List<String> projectPhases) {
    
    this.projectPhases = projectPhases;
    return this;
  }

  public SimpleAiaProjectPublicDto addProjectPhasesItem(String projectPhasesItem) {
    if (this.projectPhases == null) {
      this.projectPhases = new ArrayList<>();
    }
    this.projectPhases.add(projectPhasesItem);
    return this;
  }

  /**
   * Get projectPhases
   * @return projectPhases
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROJECT_PHASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getProjectPhases() {
    return projectPhases;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_PHASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectPhases(List<String> projectPhases) {
    this.projectPhases = projectPhases;
  }


  public SimpleAiaProjectPublicDto purposes(List<String> purposes) {
    
    this.purposes = purposes;
    return this;
  }

  public SimpleAiaProjectPublicDto addPurposesItem(String purposesItem) {
    if (this.purposes == null) {
      this.purposes = new ArrayList<>();
    }
    this.purposes.add(purposesItem);
    return this;
  }

  /**
   * Get purposes
   * @return purposes
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PURPOSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getPurposes() {
    return purposes;
  }


  @JsonProperty(JSON_PROPERTY_PURPOSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurposes(List<String> purposes) {
    this.purposes = purposes;
  }


  public SimpleAiaProjectPublicDto actors(List<String> actors) {
    
    this.actors = actors;
    return this;
  }

  public SimpleAiaProjectPublicDto addActorsItem(String actorsItem) {
    if (this.actors == null) {
      this.actors = new ArrayList<>();
    }
    this.actors.add(actorsItem);
    return this;
  }

  /**
   * Get actors
   * @return actors
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACTORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getActors() {
    return actors;
  }


  @JsonProperty(JSON_PROPERTY_ACTORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActors(List<String> actors) {
    this.actors = actors;
  }


  public SimpleAiaProjectPublicDto domainSpecificModelTypes(List<String> domainSpecificModelTypes) {
    
    this.domainSpecificModelTypes = domainSpecificModelTypes;
    return this;
  }

  public SimpleAiaProjectPublicDto addDomainSpecificModelTypesItem(String domainSpecificModelTypesItem) {
    if (this.domainSpecificModelTypes == null) {
      this.domainSpecificModelTypes = new ArrayList<>();
    }
    this.domainSpecificModelTypes.add(domainSpecificModelTypesItem);
    return this;
  }

  /**
   * Get domainSpecificModelTypes
   * @return domainSpecificModelTypes
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DOMAIN_SPECIFIC_MODEL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDomainSpecificModelTypes() {
    return domainSpecificModelTypes;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_SPECIFIC_MODEL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainSpecificModelTypes(List<String> domainSpecificModelTypes) {
    this.domainSpecificModelTypes = domainSpecificModelTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleAiaProjectPublicDto simpleAiaProjectPublicDto = (SimpleAiaProjectPublicDto) o;
    return Objects.equals(this.name, simpleAiaProjectPublicDto.name) &&
        Objects.equals(this.description, simpleAiaProjectPublicDto.description) &&
        Objects.equals(this.id, simpleAiaProjectPublicDto.id) &&
        Objects.equals(this.guid, simpleAiaProjectPublicDto.guid) &&
        Objects.equals(this.version, simpleAiaProjectPublicDto.version) &&
        Objects.equals(this.organisation, simpleAiaProjectPublicDto.organisation) &&
        Objects.equals(this.visibility, simpleAiaProjectPublicDto.visibility) &&
        Objects.equals(this.constructionTypes, simpleAiaProjectPublicDto.constructionTypes) &&
        Objects.equals(this.projectPhases, simpleAiaProjectPublicDto.projectPhases) &&
        Objects.equals(this.purposes, simpleAiaProjectPublicDto.purposes) &&
        Objects.equals(this.actors, simpleAiaProjectPublicDto.actors) &&
        Objects.equals(this.domainSpecificModelTypes, simpleAiaProjectPublicDto.domainSpecificModelTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, id, guid, version, organisation, visibility, constructionTypes, projectPhases, purposes, actors, domainSpecificModelTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleAiaProjectPublicDto {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    organisation: ").append(toIndentedString(organisation)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    constructionTypes: ").append(toIndentedString(constructionTypes)).append("\n");
    sb.append("    projectPhases: ").append(toIndentedString(projectPhases)).append("\n");
    sb.append("    purposes: ").append(toIndentedString(purposes)).append("\n");
    sb.append("    actors: ").append(toIndentedString(actors)).append("\n");
    sb.append("    domainSpecificModelTypes: ").append(toIndentedString(domainSpecificModelTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

