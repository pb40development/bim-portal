/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.bimportal.client.model.PropertyOrGroupCatalogInformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * PropertyOrGroupForPublicDto
 */
@JsonPropertyOrder({
  PropertyOrGroupForPublicDto.JSON_PROPERTY_NAME,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_DEFINITION,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_GUID,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_VERSION_NUMBER,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_REVISION_NUMBER,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_PARENT_GUIDS,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_ORGANISATION_NAME,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_DATA_TYPE,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_UNITS,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_CATEGORY,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_DEPRECATED,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_CURRENT_PAGE,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_MAX_PAGE,
  PropertyOrGroupForPublicDto.JSON_PROPERTY_CATALOG_INFORMATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class PropertyOrGroupForPublicDto {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DEFINITION = "definition";
  private String definition;

  public static final String JSON_PROPERTY_GUID = "guid";
  private UUID guid;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Long versionNumber;

  public static final String JSON_PROPERTY_REVISION_NUMBER = "revisionNumber";
  private Long revisionNumber;

  public static final String JSON_PROPERTY_PARENT_GUIDS = "parentGuids";
  private List<UUID> parentGuids = new ArrayList<>();

  public static final String JSON_PROPERTY_ORGANISATION_NAME = "organisationName";
  private String organisationName;

  public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
  private String dataType;

  public static final String JSON_PROPERTY_UNITS = "units";
  private List<String> units = new ArrayList<>();

  /**
   * Gets or Sets category
   */
  public enum CategoryEnum {
    ALTERNATIVE_USE("ALTERNATIVE_USE"),
    
    propertyClass("CLASS"),
    
    COMPOSED_PROPERTY("COMPOSED_PROPERTY"),
    
    DOMAIN("DOMAIN"),
    
    REFERENCE_DOCUMENT("REFERENCE_DOCUMENT"),
    
    NAME_PROPERTY_SET("NAME_PROPERTY_SET");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CategoryEnum fromValue(String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private CategoryEnum category;

  public static final String JSON_PROPERTY_DEPRECATED = "deprecated";
  private Boolean deprecated;

  public static final String JSON_PROPERTY_CURRENT_PAGE = "currentPage";
  private Integer currentPage;

  public static final String JSON_PROPERTY_MAX_PAGE = "maxPage";
  private Integer maxPage;

  public static final String JSON_PROPERTY_CATALOG_INFORMATION = "catalogInformation";
  private PropertyOrGroupCatalogInformation catalogInformation;

  public PropertyOrGroupForPublicDto() {
  }

  public PropertyOrGroupForPublicDto name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PropertyOrGroupForPublicDto definition(String definition) {
    
    this.definition = definition;
    return this;
  }

  /**
   * Get definition
   * @return definition
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefinition() {
    return definition;
  }


  @JsonProperty(JSON_PROPERTY_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public PropertyOrGroupForPublicDto guid(UUID guid) {
    
    this.guid = guid;
    return this;
  }

  /**
   * Get guid
   * @return guid
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(UUID guid) {
    this.guid = guid;
  }


  public PropertyOrGroupForPublicDto versionNumber(Long versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

  /**
   * Get versionNumber
   * @return versionNumber
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVersionNumber() {
    return versionNumber;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionNumber(Long versionNumber) {
    this.versionNumber = versionNumber;
  }


  public PropertyOrGroupForPublicDto revisionNumber(Long revisionNumber) {
    
    this.revisionNumber = revisionNumber;
    return this;
  }

  /**
   * Get revisionNumber
   * @return revisionNumber
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRevisionNumber() {
    return revisionNumber;
  }


  @JsonProperty(JSON_PROPERTY_REVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevisionNumber(Long revisionNumber) {
    this.revisionNumber = revisionNumber;
  }


  public PropertyOrGroupForPublicDto parentGuids(List<UUID> parentGuids) {
    
    this.parentGuids = parentGuids;
    return this;
  }

  public PropertyOrGroupForPublicDto addParentGuidsItem(UUID parentGuidsItem) {
    if (this.parentGuids == null) {
      this.parentGuids = new ArrayList<>();
    }
    this.parentGuids.add(parentGuidsItem);
    return this;
  }

  /**
   * Get parentGuids
   * @return parentGuids
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PARENT_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getParentGuids() {
    return parentGuids;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentGuids(List<UUID> parentGuids) {
    this.parentGuids = parentGuids;
  }


  public PropertyOrGroupForPublicDto organisationName(String organisationName) {
    
    this.organisationName = organisationName;
    return this;
  }

  /**
   * Get organisationName
   * @return organisationName
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganisationName() {
    return organisationName;
  }


  @JsonProperty(JSON_PROPERTY_ORGANISATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationName(String organisationName) {
    this.organisationName = organisationName;
  }


  public PropertyOrGroupForPublicDto dataType(String dataType) {
    
    this.dataType = dataType;
    return this;
  }

  /**
   * Get dataType
   * @return dataType
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDataType() {
    return dataType;
  }


  @JsonProperty(JSON_PROPERTY_DATA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataType(String dataType) {
    this.dataType = dataType;
  }


  public PropertyOrGroupForPublicDto units(List<String> units) {
    
    this.units = units;
    return this;
  }

  public PropertyOrGroupForPublicDto addUnitsItem(String unitsItem) {
    if (this.units == null) {
      this.units = new ArrayList<>();
    }
    this.units.add(unitsItem);
    return this;
  }

  /**
   * Get units
   * @return units
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUnits() {
    return units;
  }


  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnits(List<String> units) {
    this.units = units;
  }


  public PropertyOrGroupForPublicDto category(CategoryEnum category) {
    
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CategoryEnum getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(CategoryEnum category) {
    this.category = category;
  }


  public PropertyOrGroupForPublicDto deprecated(Boolean deprecated) {
    
    this.deprecated = deprecated;
    return this;
  }

  /**
   * Get deprecated
   * @return deprecated
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeprecated() {
    return deprecated;
  }


  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecated(Boolean deprecated) {
    this.deprecated = deprecated;
  }


  public PropertyOrGroupForPublicDto currentPage(Integer currentPage) {
    
    this.currentPage = currentPage;
    return this;
  }

  /**
   * Get currentPage
   * @return currentPage
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CURRENT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCurrentPage() {
    return currentPage;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }


  public PropertyOrGroupForPublicDto maxPage(Integer maxPage) {
    
    this.maxPage = maxPage;
    return this;
  }

  /**
   * Get maxPage
   * @return maxPage
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MAX_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxPage() {
    return maxPage;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPage(Integer maxPage) {
    this.maxPage = maxPage;
  }


  public PropertyOrGroupForPublicDto catalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {
    
    this.catalogInformation = catalogInformation;
    return this;
  }

  /**
   * Get catalogInformation
   * @return catalogInformation
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PropertyOrGroupCatalogInformation getCatalogInformation() {
    return catalogInformation;
  }


  @JsonProperty(JSON_PROPERTY_CATALOG_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogInformation(PropertyOrGroupCatalogInformation catalogInformation) {
    this.catalogInformation = catalogInformation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyOrGroupForPublicDto propertyOrGroupForPublicDto = (PropertyOrGroupForPublicDto) o;
    return Objects.equals(this.name, propertyOrGroupForPublicDto.name) &&
        Objects.equals(this.definition, propertyOrGroupForPublicDto.definition) &&
        Objects.equals(this.guid, propertyOrGroupForPublicDto.guid) &&
        Objects.equals(this.versionNumber, propertyOrGroupForPublicDto.versionNumber) &&
        Objects.equals(this.revisionNumber, propertyOrGroupForPublicDto.revisionNumber) &&
        Objects.equals(this.parentGuids, propertyOrGroupForPublicDto.parentGuids) &&
        Objects.equals(this.organisationName, propertyOrGroupForPublicDto.organisationName) &&
        Objects.equals(this.dataType, propertyOrGroupForPublicDto.dataType) &&
        Objects.equals(this.units, propertyOrGroupForPublicDto.units) &&
        Objects.equals(this.category, propertyOrGroupForPublicDto.category) &&
        Objects.equals(this.deprecated, propertyOrGroupForPublicDto.deprecated) &&
        Objects.equals(this.currentPage, propertyOrGroupForPublicDto.currentPage) &&
        Objects.equals(this.maxPage, propertyOrGroupForPublicDto.maxPage) &&
        Objects.equals(this.catalogInformation, propertyOrGroupForPublicDto.catalogInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, definition, guid, versionNumber, revisionNumber, parentGuids, organisationName, dataType, units, category, deprecated, currentPage, maxPage, catalogInformation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyOrGroupForPublicDto {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    parentGuids: ").append(toIndentedString(parentGuids)).append("\n");
    sb.append("    organisationName: ").append(toIndentedString(organisationName)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    deprecated: ").append(toIndentedString(deprecated)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    maxPage: ").append(toIndentedString(maxPage)).append("\n");
    sb.append("    catalogInformation: ").append(toIndentedString(catalogInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

