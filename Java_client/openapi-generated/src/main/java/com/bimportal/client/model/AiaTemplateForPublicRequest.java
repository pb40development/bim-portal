/*
 * BIM-Portal REST-API
 * Dies ist die Dokumentation der REST-Endpunkte, die sowohl öffentliche als auch private Informationselemente abrufen können. Authentifizierung ist für den Zugriff auf private Ressourcen erforderlich. Die Endpunkte können auf dieser Seite getestet werden.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bimportal.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * AiaTemplateForPublicRequest
 */
@JsonPropertyOrder({
  AiaTemplateForPublicRequest.JSON_PROPERTY_ORGANISATION_GUIDS,
  AiaTemplateForPublicRequest.JSON_PROPERTY_SEARCH_STRING,
  AiaTemplateForPublicRequest.JSON_PROPERTY_CONTEXT_IDS,
  AiaTemplateForPublicRequest.JSON_PROPERTY_PROJECT_TEMPLATE,
  AiaTemplateForPublicRequest.JSON_PROPERTY_TEMPLATE,
  AiaTemplateForPublicRequest.JSON_PROPERTY_INCLUDE_DEPRECATED,
  AiaTemplateForPublicRequest.JSON_PROPERTY_PAGE_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-03T22:05:51.794303+02:00[Europe/Berlin]", comments = "Generator version: 7.9.0")
public class AiaTemplateForPublicRequest {
  public static final String JSON_PROPERTY_ORGANISATION_GUIDS = "organisationGuids";
  private Set<UUID> organisationGuids = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SEARCH_STRING = "searchString";
  private String searchString;

  public static final String JSON_PROPERTY_CONTEXT_IDS = "contextIds";
  private List<UUID> contextIds = new ArrayList<>();

  public static final String JSON_PROPERTY_PROJECT_TEMPLATE = "projectTemplate";
  private Boolean projectTemplate;

  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private Boolean template;

  public static final String JSON_PROPERTY_INCLUDE_DEPRECATED = "includeDeprecated";
  private Boolean includeDeprecated;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  private Integer pageNumber;

  public AiaTemplateForPublicRequest() {
  }

  public AiaTemplateForPublicRequest organisationGuids(Set<UUID> organisationGuids) {
    
    this.organisationGuids = organisationGuids;
    return this;
  }

  public AiaTemplateForPublicRequest addOrganisationGuidsItem(UUID organisationGuidsItem) {
    if (this.organisationGuids == null) {
      this.organisationGuids = new LinkedHashSet<>();
    }
    this.organisationGuids.add(organisationGuidsItem);
    return this;
  }

  /**
   * GUIDs der Organisationen, denen die LOINs angehören müssen
   * @return organisationGuids
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getOrganisationGuids() {
    return organisationGuids;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ORGANISATION_GUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganisationGuids(Set<UUID> organisationGuids) {
    this.organisationGuids = organisationGuids;
  }


  public AiaTemplateForPublicRequest searchString(String searchString) {
    
    this.searchString = searchString;
    return this;
  }

  /**
   * Teilstring, den die Namen der zu liefernden LOINs beinhalten müssen
   * @return searchString
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchString() {
    return searchString;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchString(String searchString) {
    this.searchString = searchString;
  }


  public AiaTemplateForPublicRequest contextIds(List<UUID> contextIds) {
    
    this.contextIds = contextIds;
    return this;
  }

  public AiaTemplateForPublicRequest addContextIdsItem(UUID contextIdsItem) {
    if (this.contextIds == null) {
      this.contextIds = new ArrayList<>();
    }
    this.contextIds.add(contextIdsItem);
    return this;
  }

  /**
   * GUIDs der Kontextinformationen, die die zu liefernden LOINs referenzieren müssen
   * @return contextIds
   */
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CONTEXT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getContextIds() {
    return contextIds;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContextIds(List<UUID> contextIds) {
    this.contextIds = contextIds;
  }


  public AiaTemplateForPublicRequest projectTemplate(Boolean projectTemplate) {
    
    this.projectTemplate = projectTemplate;
    return this;
  }

  /**
   * true, wenn die Vorlage eine Projektvorlage ist
   * @return projectTemplate
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROJECT_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProjectTemplate() {
    return projectTemplate;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectTemplate(Boolean projectTemplate) {
    this.projectTemplate = projectTemplate;
  }


  public AiaTemplateForPublicRequest template(Boolean template) {
    
    this.template = template;
    return this;
  }

  /**
   * true, wenn die Vorlage eine Teilvorlage ist
   * @return template
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTemplate() {
    return template;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplate(Boolean template) {
    this.template = template;
  }


  public AiaTemplateForPublicRequest includeDeprecated(Boolean includeDeprecated) {
    
    this.includeDeprecated = includeDeprecated;
    return this;
  }

  /**
   * true, wenn auch veraltete LOINs mitgeliefert werden sollen
   * @return includeDeprecated
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeDeprecated() {
    return includeDeprecated;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeDeprecated(Boolean includeDeprecated) {
    this.includeDeprecated = includeDeprecated;
  }


  public AiaTemplateForPublicRequest pageNumber(Integer pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Laufende Nummer der Ergebnisseite
   * @return pageNumber
   */
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageNumber() {
    return pageNumber;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AiaTemplateForPublicRequest aiaTemplateForPublicRequest = (AiaTemplateForPublicRequest) o;
    return Objects.equals(this.organisationGuids, aiaTemplateForPublicRequest.organisationGuids) &&
        Objects.equals(this.searchString, aiaTemplateForPublicRequest.searchString) &&
        Objects.equals(this.contextIds, aiaTemplateForPublicRequest.contextIds) &&
        Objects.equals(this.projectTemplate, aiaTemplateForPublicRequest.projectTemplate) &&
        Objects.equals(this.template, aiaTemplateForPublicRequest.template) &&
        Objects.equals(this.includeDeprecated, aiaTemplateForPublicRequest.includeDeprecated) &&
        Objects.equals(this.pageNumber, aiaTemplateForPublicRequest.pageNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organisationGuids, searchString, contextIds, projectTemplate, template, includeDeprecated, pageNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AiaTemplateForPublicRequest {\n");
    sb.append("    organisationGuids: ").append(toIndentedString(organisationGuids)).append("\n");
    sb.append("    searchString: ").append(toIndentedString(searchString)).append("\n");
    sb.append("    contextIds: ").append(toIndentedString(contextIds)).append("\n");
    sb.append("    projectTemplate: ").append(toIndentedString(projectTemplate)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    includeDeprecated: ").append(toIndentedString(includeDeprecated)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

