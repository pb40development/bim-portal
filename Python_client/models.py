# generated by datamodel-codegen:
#   filename:  swagger.yaml
#   timestamp: 2025-08-29T14:19:17+00:00
# Fixed for Pydantic v2 compatibility

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional, Union, Set
from uuid import UUID

from pydantic import BaseModel, Field, constr


class RefreshTokenRequestDTO(BaseModel):
    refreshToken: Optional[str] = None


class JWTTokenPublicDto(BaseModel):
    token: Optional[str] = None
    refreshToken: Optional[str] = None
    validTill: Optional[datetime] = None


class UserLoginPublicDto(BaseModel):
    mail: constr(min_length=1)
    password: constr(min_length=1)


class OrganisationForPublicDTO(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    guid: Optional[UUID] = None
    parentGuid: Optional[UUID] = None
    bundOrganisationOrChild: Optional[bool] = None


class PropertyOrGroupForPublicRequest(BaseModel):
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die Merkmale oder Gruppen angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden Merkmale und Gruppen beinhalten müssen',
    )
    filterGuids: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Filter, die die zu liefernden Merkmale und Gruppen besitzen müssen',
    )
    parentGuid: Optional[UUID] = Field(
        None,
        description='GUID der Gruppe, in der die zu liefernden Merkmale und Gruppen enthalten sein müssen',
    )
    includeDeprecated: Optional[bool] = Field(
        None,
        description='true, wenn auch veraltete Merkmale und Gruppen mitgeliefert werden sollen',
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class PropertyOrGroupCatalogInformation(BaseModel):
    catalogName: Optional[str] = None
    catalogUrl: Optional[str] = None
    catalogProvider: Optional[str] = None
    infoElementUrl: Optional[str] = None


class Category(Enum):
    ALTERNATIVE_USE = 'ALTERNATIVE_USE'
    CLASS = 'CLASS'
    COMPOSED_PROPERTY = 'COMPOSED_PROPERTY'
    DOMAIN = 'DOMAIN'
    REFERENCE_DOCUMENT = 'REFERENCE_DOCUMENT'
    NAME_PROPERTY_SET = 'NAME_PROPERTY_SET'


class PropertyOrGroupForPublicDto(BaseModel):
    name: Optional[str] = None
    definition: Optional[str] = None
    guid: Optional[UUID] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    parentGuids: Optional[List[UUID]] = None
    organisationName: Optional[str] = None
    dataType: Optional[str] = None
    units: Optional[List[str]] = None
    category: Optional[Category] = None
    deprecated: Optional[bool] = None
    currentPage: Optional[int] = None
    maxPage: Optional[int] = None
    catalogInformation: Optional[PropertyOrGroupCatalogInformation] = None


class Status(Enum):
    INITIAL = 'INITIAL'
    PROPOSED = 'PROPOSED'
    CREATION = 'CREATION'
    REVIEW = 'REVIEW'
    VALIDATION = 'VALIDATION'
    ACCEPTED = 'ACCEPTED'
    PUBLISHED = 'PUBLISHED'
    DEPRECATED = 'DEPRECATED'
    SORTED_OUT = 'SORTED_OUT'
    REJECTED = 'REJECTED'


class Visibility(Enum):
    PUBLIC = 'PUBLIC'
    SECURED = 'SECURED'
    CHILD = 'CHILD'
    PRIVATE = 'PRIVATE'


class NextState(Enum):
    PROPOSE = 'PROPOSE'
    ACCEPT = 'ACCEPT'
    SUBMIT_FOR_REVIEW = 'SUBMIT_FOR_REVIEW'
    SUBMIT_FOR_VALIDATION = 'SUBMIT_FOR_VALIDATION'
    VALIDATED = 'VALIDATED'
    PUBLISH = 'PUBLISH'
    DEPRECATE = 'DEPRECATE'
    SORT_OUT = 'SORT_OUT'
    REJECT = 'REJECT'
    RESTORE = 'RESTORE'
    EXTEND = 'EXTEND'
    CREATE = 'CREATE'
    IMPORT = 'IMPORT'


class BimPortalMetadata(BaseModel):
    status: Optional[Status] = None
    visibility: Optional[Visibility] = None
    external: Optional[bool] = None
    organisationId: UUID
    transferred: Optional[bool] = None
    nextState: Optional[NextState] = None


class BookmarkStatus(BaseModel):
    bookmarkId: Optional[UUID] = None


class BoundaryValues(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    boundaryValuePairs: List[str] = Field(..., min_length=1)
    unit: constr(min_length=1)


class CountryLanguageCode(BaseModel):
    code: Optional[str] = None
    language: Optional[str] = None
    country: Optional[str] = None


class DefinitionsInLanguageDto(BaseModel):
    definition: Optional[str] = None
    language: Optional[str] = None
    value: Optional[str] = None


class DescriptionsInLanguageDto(BaseModel):
    description: Optional[str] = None
    language: Optional[str] = None
    languageName: Optional[str] = None
    countryName: Optional[str] = None


class DigitalFormat(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    precision: str
    unitOfMeasure: constr(min_length=1)


class ExamplesInLanguageDto(BaseModel):
    example: Optional[str] = None
    language: Optional[str] = None
    languageName: Optional[str] = None
    countryName: Optional[str] = None


class ListOfPossibleValuesInLanguageDto(BaseModel):
    possibleValue: Optional[str] = None
    language: Optional[str] = None
    value: Optional[str] = None


class NamesInLanguage(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    name: constr(min_length=1)
    language: constr(min_length=1)
    value: Optional[str] = None


class NamesInLanguageDto(BaseModel):
    name: Optional[str] = None
    language: Optional[str] = None
    languageName: Optional[str] = None
    countryName: Optional[str] = None
    value: Optional[str] = None


class ObservationStatus(BaseModel):
    observationId: Optional[UUID] = None


class PhysicalQuantity(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    siUnit: constr(min_length=1)
    language: constr(min_length=1)


class OrganisationType(Enum):
    SIGNED_IN = 'SIGNED_IN'
    DEFINED = 'DEFINED'
    BIM_PORTAL = 'BIM_PORTAL'
    BUND = 'BUND'


class InformationElementStatus(Enum):
    INITIAL = 'INITIAL'
    PROPOSED = 'PROPOSED'
    CREATION = 'CREATION'
    REVIEW = 'REVIEW'
    VALIDATION = 'VALIDATION'
    ACCEPTED = 'ACCEPTED'
    PUBLISHED = 'PUBLISHED'
    DEPRECATED = 'DEPRECATED'
    SORTED_OUT = 'SORTED_OUT'
    REJECTED = 'REJECTED'


class PropertyOrGroupWithNamesInLanguage(BaseModel):
    id: Optional[UUID] = None
    namesInLanguage: Optional[List[NamesInLanguageDto]] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    informationElementStatus: Optional[InformationElementStatus] = None


class RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    propGroupID: str
    interConDictID: str


class RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    propertyID: str
    interConDictID: str


class SimpleInheritedPropertyDto(BaseModel):
    id: Optional[UUID] = None
    names: Optional[Set[NamesInLanguage]] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    informationElementStatus: Optional[InformationElementStatus] = None


class SimpleParentGroup(BaseModel):
    id: Optional[UUID] = None
    namesInLanguage: Optional[List[NamesInLanguageDto]] = None
    definitionsInLanguage: Optional[List[DefinitionsInLanguageDto]] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    informationElementStatus: Optional[InformationElementStatus] = None
    containsProperty: Optional[bool] = None
    guid: Optional[UUID] = None
    categoryOfGroupOfProperties: Optional[str] = None
    userCanViewDetails: Optional[bool] = None
    versionRevisionString: Optional[str] = None


class SymbolsOfTheGivenPropertyGroupDto(BaseModel):
    symbol: Optional[str] = None
    propGroupID: Optional[UUID] = None
    groupNames: Optional[List[NamesInLanguageDto]] = None


class TagDto(BaseModel):
    id: UUID
    name: constr(min_length=1)
    organisationId: UUID
    global_: Optional[bool] = Field(None, alias='global')
    assignmentCount: Optional[int] = None
    guidReference: Optional[UUID] = None


class TextFormat(BaseModel):
    encoding: Optional[str] = None
    numberOfCharacters: Optional[str] = None


class TagForPublicDto(BaseModel):
    name: constr(min_length=1)
    guid: UUID


class TagGroupForPublicDto(BaseModel):
    name: constr(min_length=1)
    guid: UUID
    filter: Optional[List[TagForPublicDto]] = None


class LoinForPublicRequest(BaseModel):
    filterGuids: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Filter, die die zu liefernden LOINs besitzen müssen',
    )
    referencedIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Merkmale, die die zu liefernden LOINs referenzieren müssen',
    )
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die LOINs angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden LOINs beinhalten müssen',
    )
    contextIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Kontextinformationen, die die zu liefernden LOINs referenzieren müssen',
    )
    includeDeprecated: Optional[bool] = Field(
        None, description='true, wenn auch veraltete LOINs mitgeliefert werden sollen'
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class SimpleLoinPublicDto(BaseModel):
    name: Optional[str] = None
    objectTypes: Optional[List[str]] = None
    description: Optional[str] = None
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    organisation: Optional[str] = None
    visibility: Optional[Visibility] = None
    constructionTypes: Optional[List[str]] = None
    projectPhases: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    actors: Optional[List[str]] = None
    domainSpecificModelTypes: Optional[List[str]] = None
    filters: Optional[List[str]] = None


class AiaDomainSpecificModelForPublicRequest(BaseModel):
    filterGuids: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Filter, die die zu liefernden Fachmodelle besitzen müssen',
    )
    referencedIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der LOINs, die die zu liefernden Fachmodelle referenzieren müssen',
    )
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die Fachmodelle angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden Fachmodelle beinhalten müssen',
    )
    contextIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Kontextinformationen, die die zu liefernden Fachmodelle referenzieren müssen',
    )
    includeDeprecated: Optional[bool] = Field(
        None,
        description='true, wenn auch veraltete Fachmodelle mitgeliefert werden sollen',
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class SimpleDomainSpecificModelPublicDto(BaseModel):
    name: Optional[str] = None
    dataFormats: Optional[List[str]] = None
    description: Optional[str] = None
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    organisation: Optional[str] = None
    visibility: Optional[Visibility] = None
    constructionTypes: Optional[List[str]] = None
    projectPhases: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    actors: Optional[List[str]] = None
    domainSpecificModelTypes: Optional[List[str]] = None
    filters: Optional[List[str]] = None


class AiaContextInfoPublicRequest(BaseModel):
    filterGuids: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Filter, die die zu liefernden Kontextinformationen besitzen müssen',
    )
    contextType: Optional[str] = Field(
        None, description='Spezifischer Kontextinformationstyp'
    )
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die Kontextinformationen angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden Kontextinformationen beinhalten müssen',
    )
    contextIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Kontextinformationen, die die zu liefernden Kontextinformationen referenzieren müssen',
    )
    includeDeprecated: Optional[bool] = Field(
        None,
        description='true, wenn auch veraltete Kontextinformationen mitgeliefert werden sollen',
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class ContextType(Enum):
    CONSTRUCTION_TYPE = 'CONSTRUCTION_TYPE'
    PURPOSE = 'PURPOSE'
    PROJECT_PHASE = 'PROJECT_PHASE'
    ACTOR = 'ACTOR'
    DOMAIN_SPECIFIC_MODEL_TYPE = 'DOMAIN_SPECIFIC_MODEL_TYPE'


class SimpleContextInfoPublicDto(BaseModel):
    name: Optional[str] = None
    contextType: Optional[ContextType] = None
    alternativeIdentifier: Optional[str] = None
    description: Optional[str] = None
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    organisation: Optional[str] = None
    visibility: Optional[Visibility] = None
    constructionTypes: Optional[List[str]] = None
    projectPhases: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    actors: Optional[List[str]] = None


class AiaTemplateForPublicRequest(BaseModel):
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die LOINs angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden LOINs beinhalten müssen',
    )
    contextIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Kontextinformationen, die die zu liefernden LOINs referenzieren müssen',
    )
    projectTemplate: Optional[bool] = Field(
        None, description='true, wenn die Vorlage eine Projektvorlage ist'
    )
    template: Optional[bool] = Field(
        None, description='true, wenn die Vorlage eine Teilvorlage ist'
    )
    includeDeprecated: Optional[bool] = Field(
        None, description='true, wenn auch veraltete LOINs mitgeliefert werden sollen'
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class TemplateType(Enum):
    COMPLETED_TEMPLATE = 'COMPLETED_TEMPLATE'
    UNCOMPLETED_TEMPLATE = 'UNCOMPLETED_TEMPLATE'
    PROJECT_TEMPLATE = 'PROJECT_TEMPLATE'


class SimpleAiaTemplatePublicDto(BaseModel):
    name: Optional[str] = None
    templateType: Optional[TemplateType] = None
    description: Optional[str] = None
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    organisation: Optional[str] = None
    visibility: Optional[Visibility] = None
    constructionTypes: Optional[List[str]] = None
    projectPhases: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    actors: Optional[List[str]] = None
    domainSpecificModelTypes: Optional[List[str]] = None
    filters: Optional[List[str]] = None


class AiaProjectForPublicRequest(BaseModel):
    referencedIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Fachmodelle/Projektvorlagen, die die zu liefernden Projekte referenzieren müssen',
    )
    organisationGuids: Optional[Set[UUID]] = Field(
        None,
        description='GUIDs der Organisationen, denen die Projekte angehören müssen',
    )
    searchString: Optional[str] = Field(
        None,
        description='Teilstring, den die Namen der zu liefernden Projekte beinhalten müssen',
    )
    contextIds: Optional[List[UUID]] = Field(
        None,
        description='GUIDs der Kontextinformationen, die die zu liefernden Projekte referenzieren müssen',
    )
    includeDeprecated: Optional[bool] = Field(
        None,
        description='true, wenn auch veraltete Projekte mitgeliefert werden sollen',
    )
    pageNumber: Optional[int] = Field(
        None, description='Laufende Nummer der Ergebnisseite'
    )


class SimpleAiaProjectPublicDto(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    organisation: Optional[str] = None
    visibility: Optional[Visibility] = None
    constructionTypes: Optional[List[str]] = None
    projectPhases: Optional[List[str]] = None
    purposes: Optional[List[str]] = None
    actors: Optional[List[str]] = None
    domainSpecificModelTypes: Optional[List[str]] = None


class ContextInfoPublicReference(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    name: Optional[str] = None


class Variant(Enum):
    IFC = 'IFC'
    OKSTRA = 'OKSTRA'
    OTHER = 'OTHER'


class DataFormatType(BaseModel):
    id: Optional[UUID] = None
    version: Optional[int] = None
    createdDate: Optional[datetime] = None
    name: Optional[str] = None
    majorRelease: Optional[int] = None
    minorRelease: Optional[int] = None
    addendum: Optional[int] = None
    corrigendum: Optional[int] = None
    variant: Optional[Variant] = None
    ifc: Optional[bool] = None


class DataFormatTypeDto(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    majorRelease: Optional[int] = None
    minorRelease: Optional[int] = None
    addendum: Optional[int] = None
    corrigendum: Optional[int] = None
    variant: Optional[Variant] = None
    ifc: Optional[bool] = None


class DocumentationDto(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    purpose: Optional[str] = None
    format: Optional[str] = None
    link: Optional[str] = None
    exportAsAttribute: Optional[bool] = None


class FilterDto(BaseModel):
    id: UUID
    name: constr(min_length=1)
    organisationId: UUID
    filterGroupName: Optional[str] = None
    filterGroup: Optional[UUID] = None
    global_: Optional[bool] = Field(None, alias='global')
    assignmentCount: Optional[int] = None


class IFCClassDto(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    ifcView: Optional[UUID] = None


class IFCTypeDto(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    ifcClass: Optional[UUID] = None


class IFCViewDto(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None
    ifcVersion: Optional[DataFormatType] = None


class PropertyOrGroupPublicReference(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    name: Optional[str] = None


class FilterForPublicDto(BaseModel):
    name: constr(min_length=1)
    guid: UUID


class FilterGroupForPublicDto(BaseModel):
    name: constr(min_length=1)
    guid: UUID
    filters: Optional[List[FilterForPublicDto]] = None


class ChapterPublicReference(BaseModel):
    title: Optional[str] = None
    content: Optional[str] = None
    chapterNumber: Optional[str] = None
    pleaseChange: Optional[bool] = None


class LoinPublicReference(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    name: Optional[str] = None


class AIAContextInfoPublicDto(BaseModel):
    id: Optional[UUID] = None
    createdDate: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    guid: Optional[UUID] = None
    name: Optional[str] = None
    description: Optional[str] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    buildNumber: Optional[int] = None
    exportFormats: Optional[Set[str]] = None
    templateType: Optional[TemplateType] = None
    chapters: Optional[List[ChapterPublicReference]] = None
    contextType: Optional[ContextType] = None
    alternativeIdentifier: Optional[str] = None


class AIATemplatePublicDto(BaseModel):
    id: Optional[UUID] = None
    createdDate: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    guid: Optional[UUID] = None
    name: Optional[str] = None
    description: Optional[str] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    buildNumber: Optional[int] = None
    exportFormats: Optional[Set[str]] = None
    templateType: Optional[TemplateType] = None
    chapters: Optional[List[ChapterPublicReference]] = None


class AIADomainSpecificModelPublicReference(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    version: Optional[str] = None
    name: Optional[str] = None


class AutomaticDomainSpecificModelEntryPublicReference(BaseModel):
    contexts: Optional[List[ContextInfoPublicReference]] = None
    loins: Optional[List[LoinPublicReference]] = None


class CoordinateSystem(BaseModel):
    name: Optional[str] = None
    zone: Optional[str] = None
    east: Optional[float] = None
    north: Optional[float] = None
    height: Optional[float] = None


class PropertyGroupTagDto(BaseModel):
    tag: Optional[TagDto] = None
    organisationId: Optional[UUID] = None


class TagAssignmentDto(BaseModel):
    tag: Optional[TagDto] = None
    organisationId: Optional[UUID] = None


class ClassificationPublicDto(BaseModel):
    id: Optional[UUID] = None
    property: Optional[PropertyOrGroupPublicReference] = None
    propertyGroup: Optional[PropertyOrGroupPublicReference] = None


class DataFormatDto(BaseModel):
    id: Optional[UUID] = None
    type: Optional[DataFormatTypeDto] = None
    field_class: str = Field(..., alias='@class')


class FilterAssignmentDto(BaseModel):
    filter: Optional[FilterDto] = None
    organisationId: Optional[UUID] = None


class IFCDto(DataFormatDto):
    ifcView: Optional[IFCViewDto] = None
    ifcClass: Optional[IFCClassDto] = None
    ifcType: Optional[IFCTypeDto] = None
    groupAsIFCePset: Optional[bool] = None
    saveObjectTypeAsProperty: Optional[bool] = None


class OKSTRADto(DataFormatDto):
    fileId: Optional[UUID] = None
    fileName: Optional[str] = None
    name: Optional[str] = None


class OtherDto(DataFormatDto):
    dataFormatVersion: Optional[str] = None
    viewType: Optional[str] = None
    name: Optional[str] = None


class AIADomainSpecificModelPublicDto(BaseModel):
    id: Optional[UUID] = None
    createdDate: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    guid: Optional[UUID] = None
    name: Optional[str] = None
    description: Optional[str] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    buildNumber: Optional[int] = None
    exportFormats: Optional[Set[str]] = None
    templateType: Optional[TemplateType] = None
    chapters: Optional[List[ChapterPublicReference]] = None
    loins: Optional[List[LoinPublicReference]] = None
    dataFormats: Optional[List[Union[IFCDto, OKSTRADto, OtherDto]]] = None


class AIAProjectPublicDto(BaseModel):
    id: Optional[UUID] = None
    createdDate: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    guid: Optional[UUID] = None
    name: Optional[str] = None
    description: Optional[str] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    buildNumber: Optional[int] = None
    exportFormats: Optional[Set[str]] = None
    templateType: Optional[TemplateType] = None
    chapters: Optional[List[ChapterPublicReference]] = None
    coordinateSystem: Optional[CoordinateSystem] = None
    models: Optional[List[AIADomainSpecificModelPublicReference]] = None
    automaticDomainSpecificModels: Optional[List[AutomaticDomainSpecificModelEntryPublicReference]] = None
    dataFormats: Optional[List[Union[IFCDto, OKSTRADto, OtherDto]]] = None


class PropertyDto(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    status: Optional[Status] = None
    dateOfCreation: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    replaces: Optional[List[PropertyOrGroupWithNamesInLanguage]] = None
    replacedBy: Optional[List[PropertyOrGroupWithNamesInLanguage]] = None
    deprecationExplanation: Optional[str] = None
    relationOfThePropertyIdentifiersInTheInterconnectedDictionaries: Optional[
        List[RelationOfThePropertyIdentifiersInTheInterconnectedDictionaries]
    ] = None
    catalogInformation: Optional[PropertyOrGroupCatalogInformation] = None
    creatorsLanguage: Optional[CountryLanguageCode] = None
    namesInLanguage: Optional[List[NamesInLanguageDto]] = None
    definitionsInLanguage: Optional[List[DefinitionsInLanguageDto]] = None
    descriptionsInLanguage: Optional[List[DescriptionsInLanguageDto]] = None
    examplesInLanguage: Optional[List[ExamplesInLanguageDto]] = None
    connectedProperties: Optional[List[PropertyOrGroupWithNamesInLanguage]] = None
    groupOfProperties: Optional[List[SimpleParentGroup]] = None
    symbolsOfThePropertyInAGivenPropertyGroup: Optional[
        List[SymbolsOfTheGivenPropertyGroupDto]
    ] = None
    visualRepresentation: Optional[List[str]] = None
    countryOfUse: Optional[List[str]] = None
    subdivisionOfUse: Optional[List[str]] = None
    countryOfOrigin: Optional[str] = None
    physicalQuantity: Optional[List[PhysicalQuantity]] = None
    dimension: Optional[str] = Field(
        None,
        description='Enthält die Dimension der Einheiten in der folgenden Reihenfolge: Länge, Masse, Zeit, Stoffmenge, Lichtstärke, Stromstärke, Temperatur',
    )
    methodOfMeasurement: Optional[str] = None
    dataType: Optional[str] = None
    dynamicProperty: Optional[str] = None
    parametersOfTheDynamicProperty: Optional[
        List[PropertyOrGroupWithNamesInLanguage]
    ] = None
    units: Optional[List[str]] = None
    namesOfTheDefiningValues: Optional[List[NamesInLanguage]] = None
    definingValues: Optional[List[str]] = None
    tolerance: Optional[List[float]] = None
    digitalFormat: Optional[List[DigitalFormat]] = None
    textFormat: Optional[TextFormat] = None
    listOfPossibleValuesInLanguage: Optional[
        List[ListOfPossibleValuesInLanguageDto]
    ] = None
    boundaryValues: Optional[List[BoundaryValues]] = None
    metadata: Optional[BimPortalMetadata] = None
    bookmarked: Optional[BookmarkStatus] = None
    observed: Optional[ObservationStatus] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    tags: Optional[List[TagAssignmentDto]] = None
    organisationType: Optional[OrganisationType] = None
    canCreateNewVersion: Optional[bool] = None


class PropertyGroupDto(BaseModel):
    id: Optional[UUID] = None
    guid: Optional[UUID] = None
    informationElementStatus: Optional[InformationElementStatus] = None
    dateOfCreation: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    replaces: Optional[List[PropertyOrGroupWithNamesInLanguage]] = None
    replacedBy: Optional[List[PropertyOrGroupWithNamesInLanguage]] = None
    deprecationExplanation: Optional[str] = None
    relationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries: Optional[
        List[RelationOfThePropertyGroupIdentifiersInTheInterconnectedDictionaries]
    ] = None
    creatorsLanguage: Optional[CountryLanguageCode] = None
    namesInLanguage: Optional[List[NamesInLanguageDto]] = None
    definitionsInLanguage: Optional[List[DefinitionsInLanguageDto]] = None
    visualRepresentation: Optional[List[str]] = None
    countryOfUse: Optional[List[str]] = None
    subdivisionOfUse: Optional[List[str]] = None
    countryOfOrigin: Optional[str] = None
    categoryOfGroupOfProperties: Optional[str] = None
    properties: Optional[List[PropertyDto]] = None
    childrenPropertyGroups: Optional[List['PropertyGroupDto']] = None
    parentGroup: Optional[SimpleParentGroup] = None
    metadata: Optional[BimPortalMetadata] = None
    bookmarked: Optional[BookmarkStatus] = None
    observed: Optional[ObservationStatus] = None
    simpleInheritedProperties: Optional[List[SimpleInheritedPropertyDto]] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    tags: Optional[List[PropertyGroupTagDto]] = None
    organisationType: Optional[OrganisationType] = None
    canCreateNewVersion: Optional[bool] = None
    catalogInformation: Optional[PropertyOrGroupCatalogInformation] = None


class LOINPublicDto(BaseModel):
    id: Optional[UUID] = None
    createdDate: Optional[datetime] = None
    dateOfActivation: Optional[datetime] = None
    dateOfLastChange: Optional[datetime] = None
    dateOfRevision: Optional[datetime] = None
    dateOfVersion: Optional[datetime] = None
    dateOfDeactivation: Optional[datetime] = None
    guid: Optional[UUID] = None
    name: Optional[str] = None
    description: Optional[str] = None
    organisationId: Optional[UUID] = None
    organisationName: Optional[str] = None
    versionNumber: Optional[int] = None
    revisionNumber: Optional[int] = None
    buildNumber: Optional[int] = None
    exportFormats: Optional[Set[str]] = None
    filters: Optional[List[FilterAssignmentDto]] = None
    objectTypes: Optional[List[PropertyOrGroupPublicReference]] = None
    dataFormats: Optional[List[Union[IFCDto, OKSTRADto, OtherDto]]] = None
    properties: Optional[List[PropertyOrGroupPublicReference]] = None
    levelOfDetail: Optional[str] = None
    dimensionality: Optional[str] = None
    location: Optional[str] = None
    appearance: Optional[str] = None
    behaviour: Optional[str] = None
    geometricComment: Optional[str] = None
    documentations: Optional[List[DocumentationDto]] = None
    fallbackPropertyGroupName: Optional[str] = None
    classifications: Optional[List[ClassificationPublicDto]] = None
    contexts: Optional[List[ContextInfoPublicReference]] = None


# Update forward references for recursive models
PropertyGroupDto.model_rebuild()